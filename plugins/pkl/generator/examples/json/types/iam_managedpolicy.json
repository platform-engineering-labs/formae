{
  "Targets": [
    {
      "Label": "us-west-1",
      "Namespace": "AWS",
      "Config": {
        "Region": "us-west-1",
        "Type": "AWS"
      }
    }
  ],
  "Resources": [
    {
      "Label": "arn:aws:iam::aws:policy/AWSSystemsManagerJustInTimeAccessTokenSessionPolicy",
      "Type": "AWS::IAM::ManagedPolicy",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "Description": "The managed policy AWSSystemsManagerJustInTimeAccessTokenSessionPolicy allows Systems Manager to apply scoped down permissions to a just-in-time node access session once it is started.",
        "ManagedPolicyName": "AWSSystemsManagerJustInTimeAccessTokenSessionPolicy",
        "Path": "/",
        "PolicyArn": "arn:aws:iam::aws:policy/AWSSystemsManagerJustInTimeAccessTokenSessionPolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:StartSession"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:ssm:*:*:document/SSM-SessionManagerRunShell"
              ],
              "Sid": "SsmStartSession"
            },
            {
              "Action": [
                "ssm-guiconnect:CancelConnection",
                "ssm-guiconnect:GetConnection",
                "ssm-guiconnect:StartConnection"
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "GuiConnect"
            },
            {
              "Action": [
                "kms:GenerateDataKey"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:ResourceTag/SystemsManagerJustInTimeNodeAccessManaged": "true"
                }
              },
              "Effect": "Allow",
              "Resource": "arn:aws:kms:*:*:key/*",
              "Sid": "SessionManagerKmsPermission"
            },
            {
              "Action": [
                "kms:CreateGrant"
              ],
              "Condition": {
                "Bool": {
                  "aws:ViaAWSService": "true"
                },
                "StringEquals": {
                  "aws:ResourceTag/SystemsManagerJustInTimeNodeAccessManaged": "true"
                },
                "StringLike": {
                  "kms:ViaService": "ssm-guiconnect.*.amazonaws.com"
                }
              },
              "Effect": "Allow",
              "Resource": "arn:aws:kms:*:*:key/*",
              "Sid": "RdpKmsPermission"
            },
            {
              "Action": [
                "ssm:StartSession"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:CalledViaFirst": "ssm-guiconnect.amazonaws.com"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "arn:aws:ssm:*:*:document/AWS-StartPortForwardingSession"
              ],
              "Sid": "RdpStartSession"
            },
            {
              "Action": [
                "sso:ListDirectoryAssociations*",
                "identitystore:DescribeUser",
                "ssm:GetCommandInvocation"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:CalledViaFirst": "ssm-guiconnect.amazonaws.com"
                }
              },
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "SsmRdpSsoSetup"
            },
            {
              "Action": [
                "ssm:SendCommand"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:CalledViaFirst": "ssm-guiconnect.amazonaws.com"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "arn:aws:ssm:*:*:document/AWSSSO-CreateSSOUser"
              ],
              "Sid": "SsmRdpSsoSetupSendCommand"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "NativeId": "arn:aws:iam::aws:policy/AWSSystemsManagerJustInTimeAccessTokenSessionPolicy"
    },
    {
      "Label": "arn:aws:iam::123456789012:policy/AmazonEKS_EBS_CSI_Policy-example-policy",
      "Type": "AWS::IAM::ManagedPolicy",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "Description": "Provides permissions to manage EBS volumes via the container storage interface driver",
        "Groups": [],
        "ManagedPolicyName": "AmazonEKS_EBS_CSI_Policy-example-policy",
        "Path": "/",
        "PolicyArn": "arn:aws:iam::123456789012:policy/AmazonEKS_EBS_CSI_Policy-example-policy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:ModifyVolume",
                "ec2:EnableFastSnapshotRestores",
                "ec2:DetachVolume",
                "ec2:DescribeVolumesModifications",
                "ec2:DescribeVolumes",
                "ec2:DescribeTags",
                "ec2:DescribeSnapshots",
                "ec2:DescribeInstances",
                "ec2:DescribeAvailabilityZones",
                "ec2:CreateSnapshot",
                "ec2:AttachVolume"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ec2:CreateTags",
              "Condition": {
                "StringEquals": {
                  "ec2:CreateAction": [
                    "CreateVolume",
                    "CreateSnapshot"
                  ]
                }
              },
              "Effect": "Allow",
              "Resource": [
                "arn:aws:ec2:*:*:volume/*",
                "arn:aws:ec2:*:*:snapshot/*"
              ]
            },
            {
              "Action": "ec2:DeleteTags",
              "Effect": "Allow",
              "Resource": [
                "arn:aws:ec2:*:*:volume/*",
                "arn:aws:ec2:*:*:snapshot/*"
              ]
            },
            {
              "Action": "ec2:CreateVolume",
              "Condition": {
                "StringLike": {
                  "aws:RequestTag/ebs.csi.aws.com/cluster": "true"
                }
              },
              "Effect": "Allow",
              "Resource": "arn:aws:ec2:*:*:volume/*"
            },
            {
              "Action": "ec2:CreateVolume",
              "Condition": {
                "StringLike": {
                  "aws:RequestTag/CSIVolumeName": "*"
                }
              },
              "Effect": "Allow",
              "Resource": "arn:aws:ec2:*:*:volume/*"
            },
            {
              "Action": "ec2:CreateVolume",
              "Condition": {
                "StringLike": {
                  "aws:RequestTag/kubernetes.io/cluster/*": "owned"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ec2:CreateVolume",
              "Effect": "Allow",
              "Resource": "arn:aws:ec2:*:*:snapshot/*"
            },
            {
              "Action": "ec2:DeleteVolume",
              "Condition": {
                "StringLike": {
                  "ec2:ResourceTag/ebs.csi.aws.com/cluster": "true"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ec2:DeleteVolume",
              "Condition": {
                "StringLike": {
                  "ec2:ResourceTag/CSIVolumeName": "*"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ec2:DeleteVolume",
              "Condition": {
                "StringLike": {
                  "ec2:ResourceTag/kubernetes.io/cluster/*": "owned"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ec2:DeleteVolume",
              "Condition": {
                "StringLike": {
                  "ec2:ResourceTag/kubernetes.io/created-for/pvc/name": "*"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ec2:DeleteSnapshot",
              "Condition": {
                "StringLike": {
                  "ec2:ResourceTag/CSIVolumeSnapshotName": "*"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ec2:DeleteSnapshot",
              "Condition": {
                "StringLike": {
                  "ec2:ResourceTag/ebs.csi.aws.com/cluster": "true"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Roles": [],
        "Users": []
      },
      "ReadOnlyProperties": {
        "AttachmentCount": 0,
        "CreateDate": "Optional[2024-11-21T08:43:52Z]",
        "DefaultVersionId": "v1",
        "IsAttachable": true,
        "PermissionsBoundaryUsageCount": 0,
        "PolicyArn": "arn:aws:iam::123456789012:policy/AmazonEKS_EBS_CSI_Policy-example-policy",
        "PolicyId": "ANPARFORJUZLGDSBHGW2O",
        "UpdateDate": "Optional[2024-11-21T08:43:52Z]"
      },
      "NativeId": "arn:aws:iam::123456789012:policy/AmazonEKS_EBS_CSI_Policy-example-policy"
    },
    {
      "Label": "arn:aws:iam::123456789012:policy/service-role/AWSLambdaBasicExecutionRole-example-lambda-role",
      "Type": "AWS::IAM::ManagedPolicy",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "AWSLambdaBasicExecutionRole-example-lambda-role",
        "Path": "/service-role/",
        "PolicyArn": "arn:aws:iam::123456789012:policy/service-role/AWSLambdaBasicExecutionRole-example-lambda-role",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": "arn:aws:logs:us-east-1:123456789012:*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:logs:us-east-1:123456789012:log-group:/aws/lambda/example-skill:*"
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "Roles": [
          "example-skill-role"
        ]
      },
      "NativeId": "arn:aws:iam::123456789012:policy/service-role/AWSLambdaBasicExecutionRole-example-lambda-role"
    },
    {
      "Label": "arn:aws:iam::123456789012:policy/example-modules.example-ecr-create-repository",
      "Type": "AWS::IAM::ManagedPolicy",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "Description": "Create ECR repository",
        "Groups": [],
        "ManagedPolicyName": "example-modules.example-ecr-create-repository",
        "Path": "/",
        "PolicyArn": "arn:aws:iam::123456789012:policy/example-modules.example-ecr-create-repository",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecr:CreateRepository",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Roles": [
          "example-development-modules-role"
        ],
        "Users": []
      },
      "ReadOnlyProperties": {
        "AttachmentCount": 1,
        "CreateDate": "Optional[2024-03-12T14:26:30Z]",
        "DefaultVersionId": "v1",
        "IsAttachable": true,
        "PermissionsBoundaryUsageCount": 0,
        "PolicyArn": "arn:aws:iam::123456789012:policy/example-modules.example-ecr-create-repository",
        "PolicyId": "ANPARFORJUZLKUP3OYD2B",
        "UpdateDate": "Optional[2024-03-12T14:26:30Z]"
      },
      "NativeId": "arn:aws:iam::123456789012:policy/example-modules.example-ecr-create-repository"
    },
    {
      "Label": "arn:aws:iam::123456789012:policy/example_admin_policy",
      "Type": "AWS::IAM::ManagedPolicy",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "Description": "Example admin access policy",
        "Groups": [],
        "ManagedPolicyName": "example_admin_policy",
        "Path": "/",
        "PolicyArn": "arn:aws:iam::123456789012:policy/example_admin_policy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "eks:Describe*",
                "eks:List*",
                "eks:Create*",
                "eks:Delete*",
                "eks:Modify*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Roles": [],
        "Users": []
      },
      "ReadOnlyProperties": {
        "AttachmentCount": 0,
        "CreateDate": "Optional[2025-02-12T16:01:40Z]",
        "DefaultVersionId": "v1",
        "IsAttachable": true,
        "PermissionsBoundaryUsageCount": 0,
        "PolicyArn": "arn:aws:iam::123456789012:policy/example_admin_policy",
        "PolicyId": "ANPARFORJUZLAXX6JY4QV",
        "UpdateDate": "Optional[2025-02-12T16:01:40Z]"
      },
      "NativeId": "arn:aws:iam::123456789012:policy/example_admin_policy"
    },
    {
      "Label": "arn:aws:iam::123456789012:policy/example_access_key_policy",
      "Type": "AWS::IAM::ManagedPolicy",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "Description": "Policy to allow access key creation for a specific user",
        "Groups": [],
        "ManagedPolicyName": "example_access_key_policy",
        "Path": "/",
        "PolicyArn": "arn:aws:iam::123456789012:policy/example_access_key_policy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iam:CreateAccessKey",
                "iam:ListUsers"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:iam::123456789012:user/example.user"
            }
          ],
          "Version": "2012-10-17"
        },
        "Roles": [],
        "Users": []
      },
      "ReadOnlyProperties": {
        "AttachmentCount": 0,
        "CreateDate": "Optional[2024-06-05T11:47:13Z]",
        "DefaultVersionId": "v1",
        "IsAttachable": true,
        "PermissionsBoundaryUsageCount": 0,
        "PolicyArn": "arn:aws:iam::123456789012:policy/example_access_key_policy",
        "PolicyId": "ANPARFORJUZLIVSYLERMM",
        "UpdateDate": "Optional[2024-06-05T11:47:13Z]"
      },
      "NativeId": "arn:aws:iam::123456789012:policy/example_access_key_policy"
    },
    {
      "Label": "arn:aws:iam::123456789012:policy/example_lambda_ses_forwarder",
      "Type": "AWS::IAM::ManagedPolicy",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "Description": "",
        "Groups": [],
        "ManagedPolicyName": "example_lambda_ses_forwarder",
        "Path": "/",
        "PolicyArn": "arn:aws:iam::123456789012:policy/example_lambda_ses_forwarder",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:*"
            },
            {
              "Action": "ses:SendEmail",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::example-ses-forwarder/*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Roles": [],
        "Users": []
      },
      "ReadOnlyProperties": {
        "AttachmentCount": 0,
        "CreateDate": "Optional[2021-10-31T09:26:55Z]",
        "DefaultVersionId": "v1",
        "IsAttachable": true,
        "PermissionsBoundaryUsageCount": 0,
        "PolicyArn": "arn:aws:iam::123456789012:policy/example_lambda_ses_forwarder",
        "PolicyId": "ANPARFORJUZLHCY4PHHXA",
        "UpdateDate": "Optional[2021-10-31T09:26:55Z]"
      },
      "NativeId": "arn:aws:iam::123456789012:policy/example_lambda_ses_forwarder"
    },
    {
      "Label": "arn:aws:iam::123456789012:policy/service-role/ExampleRolePolicy-example-cicd-role",
      "Type": "AWS::IAM::ManagedPolicy",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "Description": "Example service role policy",
        "ManagedPolicyName": "ExampleRolePolicy-example-cicd-role",
        "Path": "/service-role/",
        "PolicyArn": "arn:aws:iam::123456789012:policy/service-role/ExampleRolePolicy-example-cicd-role",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "cloudformation:CancelUpdateStack",
                "cloudformation:ContinueUpdateRollback",
                "cloudformation:CreateChangeSet",
                "cloudformation:CreateStack",
                "cloudformation:DeleteChangeSet",
                "cloudformation:DeleteStack",
                "cloudformation:DescribeChangeSet",
                "cloudformation:DescribeStackDriftDetectionStatus",
                "cloudformation:DescribeStackEvents",
                "cloudformation:DescribeStackResourceDrifts",
                "cloudformation:DescribeStacks",
                "cloudformation:DetectStackResourceDrift",
                "cloudformation:ExecuteChangeSet",
                "cloudformation:ListChangeSets",
                "cloudformation:ListStackResources",
                "cloudformation:UpdateStack"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:cloudformation:*:123456789012:stack/ExampleStack-*"
            },
            {
              "Condition": {
                "ForAnyValue:StringEquals": {
                  "aws:CalledVia": [
                    "cloudformation.amazonaws.com"
                  ]
                }
              },
              "Effect": "Allow",
              "NotAction": [
                "organizations:*",
                "account:*"
              ],
              "Resource": "*"
            },
            {
              "Action": [
                "organizations:DescribeOrganization",
                "account:ListRegions"
              ],
              "Condition": {
                "ForAnyValue:StringEquals": {
                  "aws:CalledVia": [
                    "cloudformation.amazonaws.com"
                  ]
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Roles": [
          "example-cicd-role"
        ]
      },
      "NativeId": "arn:aws:iam::123456789012:policy/service-role/ExampleRolePolicy-example-cicd-role"
    },
    {
      "Label": "arn:aws:iam::123456789012:policy/example-cluster-policy",
      "Type": "AWS::IAM::ManagedPolicy",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "example-cluster-policy",
        "Path": "/",
        "PolicyArn": "arn:aws:iam::123456789012:policy/example-cluster-policy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:RunInstances",
                "ec2:CreateLaunchTemplate",
                "ec2:CreateFleet"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:RequestTag/eks:eks-cluster-name": "${aws:PrincipalTag/eks:eks-cluster-name}"
                },
                "StringLike": {
                  "aws:RequestTag/eks:kubernetes-node-class-name": "*",
                  "aws:RequestTag/eks:kubernetes-node-pool-name": "*"
                }
              },
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "Compute"
            },
            {
              "Action": [
                "ec2:CreateVolume",
                "ec2:CreateSnapshot"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:RequestTag/eks:eks-cluster-name": "${aws:PrincipalTag/eks:eks-cluster-name}"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "arn:aws:ec2:*:*:volume/*",
                "arn:aws:ec2:*:*:snapshot/*"
              ],
              "Sid": "Storage"
            },
            {
              "Action": "ec2:CreateNetworkInterface",
              "Condition": {
                "StringEquals": {
                  "aws:RequestTag/eks:eks-cluster-name": "${aws:PrincipalTag/eks:eks-cluster-name}",
                  "aws:RequestTag/eks:kubernetes-cni-node-name": "*"
                }
              },
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "Networking"
            },
            {
              "Action": [
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateListener",
                "ec2:CreateSecurityGroup"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:RequestTag/eks:eks-cluster-name": "${aws:PrincipalTag/eks:eks-cluster-name}"
                }
              },
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "LoadBalancer"
            },
            {
              "Action": "shield:CreateProtection",
              "Condition": {
                "StringEquals": {
                  "aws:RequestTag/eks:eks-cluster-name": "${aws:PrincipalTag/eks:eks-cluster-name}"
                }
              },
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "ShieldProtection"
            },
            {
              "Action": "shield:TagResource",
              "Condition": {
                "StringEquals": {
                  "aws:ResourceTag/eks:eks-cluster-name": "${aws:PrincipalTag/eks:eks-cluster-name}"
                }
              },
              "Effect": "Allow",
              "Resource": "arn:aws:shield::*:protection/*",
              "Sid": "ShieldTagResource"
            }
          ],
          "Version": "2012-10-17"
        },
        "Roles": [
          "example-cluster-role"
        ]
      },
      "NativeId": "arn:aws:iam::123456789012:policy/example-cluster-policy"
    },
    {
      "Label": "arn:aws:iam::123456789012:policy/example-cluster-encryption-policy",
      "Type": "AWS::IAM::ManagedPolicy",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "Description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
        "Groups": [],
        "ManagedPolicyName": "example-cluster-encryption-policy",
        "Path": "/",
        "PolicyArn": "arn:aws:iam::123456789012:policy/example-cluster-encryption-policy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:DescribeKey"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:kms:us-west-1:123456789012:key/12345678-1234-1234-1234-123456789012"
            }
          ],
          "Version": "2012-10-17"
        },
        "Roles": [
          "example-cluster-role"
        ],
        "Users": []
      },
      "ReadOnlyProperties": {
        "AttachmentCount": 1,
        "CreateDate": "Optional[2024-11-21T08:44:14Z]",
        "DefaultVersionId": "v1",
        "IsAttachable": true,
        "PermissionsBoundaryUsageCount": 0,
        "PolicyArn": "arn:aws:iam::123456789012:policy/example-cluster-encryption-policy",
        "PolicyId": "ANPARFORJUZLLVCH5YYJS",
        "UpdateDate": "Optional[2024-11-21T08:44:14Z]"
      },
      "NativeId": "arn:aws:iam::123456789012:policy/example-cluster-encryption-policy"
    },
    {
      "Label": "arn:aws:iam::123456789012:policy/example_ses_sender",
      "Type": "AWS::IAM::ManagedPolicy",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "Description": "Allows sending of e-mails via Simple Email Service",
        "ManagedPolicyName": "example_ses_sender",
        "Path": "/",
        "PolicyArn": "arn:aws:iam::123456789012:policy/example_ses_sender",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ses:SendRawEmail",
              "Effect": "Allow",
              "Resource": "*",
              "Sid": ""
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "NativeId": "arn:aws:iam::123456789012:policy/example_ses_sender"
    }
  ]
}