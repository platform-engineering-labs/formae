{
  "Targets": [
    {
      "Label": "us-west-1",
      "Namespace": "AWS",
      "Config": {
        "Region": "us-west-1",
        "Type": "AWS"
      }
    }
  ],
  "Resources": [
    {
      "Label": "AWSServiceRoleForGlobalAccelerator",
      "Type": "AWS::IAM::Role",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "globalaccelerator.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "Allows Global Accelerator to call AWS services on customer's behalf",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/aws-service-role/AWSGlobalAcceleratorSLRPolicy"
        ],
        "MaxSessionDuration": 3600,
        "Path": "/aws-service-role/globalaccelerator.amazonaws.com/",
        "RoleName": "AWSServiceRoleForGlobalAccelerator"
      },
      "NativeId": "AWSServiceRoleForGlobalAccelerator"
    },
    {
      "Label": "example-cluster-role",
      "Type": "AWS::IAM::Role",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:TagSession",
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "eks.amazonaws.com"
              },
              "Sid": "EKSClusterAssumeRole"
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::123456789012:policy/example-cluster-encryption-policy",
          "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
          "arn:aws:iam::123456789012:policy/example-cluster-policy",
          "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
        ],
        "MaxSessionDuration": 3600,
        "Path": "/",
        "RoleName": "example-cluster-role",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "development"
          },
          {
            "Key": "Terraform",
            "Value": "true"
          }
        ]
      },
      "NativeId": "example-cluster-role"
    },
    {
      "Label": "AWSReservedSSO_SecurityAudit_12345678901abcdef",
      "Type": "AWS::IAM::Role",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRoleWithSAML",
                "sts:TagSession"
              ],
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::123456789012:saml-provider/AWSSSO_example12345678_DO_NOT_DELETE"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "Read only access to perform security audits",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/SecurityAudit"
        ],
        "MaxSessionDuration": 43200,
        "Path": "/aws-reserved/sso.amazonaws.com/us-west-1/",
        "RoleName": "AWSReservedSSO_SecurityAudit_12345678901abcdef"
      },
      "NativeId": "AWSReservedSSO_SecurityAudit_12345678901abcdef"
    },
    {
      "Label": "example-lambda-deployment-role",
      "Type": "AWS::IAM::Role",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "MaxSessionDuration": 3600,
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "s3:GetObject*",
                    "s3:GetBucket*",
                    "s3:List*"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "arn:aws:s3:::example-cdk-staging-bucket",
                    "arn:aws:s3:::example-cdk-staging-bucket/*"
                  ]
                },
                {
                  "Action": [
                    "s3:GetObject*",
                    "s3:GetBucket*",
                    "s3:List*",
                    "s3:DeleteObject*",
                    "s3:PutObject",
                    "s3:Abort*"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "arn:aws:s3:::example.com",
                    "arn:aws:s3:::example.com/*"
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "ExampleBucketDeploymentServiceRoleDefaultPolicy"
          }
        ],
        "RoleName": "example-lambda-deployment-role"
      },
      "ReadOnlyProperties": {
        "Arn": "arn:aws:iam::123456789012:role/example-lambda-deployment-role",
        "RoleId": "AROAEXAMPLE1234567890"
      },
      "NativeId": "example-lambda-deployment-role"
    },
    {
      "Label": "example-node-group-role",
      "Type": "AWS::IAM::Role",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Sid": "EKSNodeAssumeRole"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "EKS managed node group IAM role",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
        ],
        "MaxSessionDuration": 3600,
        "Path": "/",
        "RoleName": "example-node-group-role",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "development"
          },
          {
            "Key": "Terraform",
            "Value": "true"
          }
        ]
      },
      "ReadOnlyProperties": {
        "Arn": "arn:aws:iam::123456789012:role/example-node-group-role",
        "RoleId": "AROAEXAMPLE2345678901"
      },
      "NativeId": "example-node-group-role"
    },
    {
      "Label": "example-app-dev-us-west-1-lambdaRole",
      "Type": "AWS::IAM::Role",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "MaxSessionDuration": 3600,
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "arn:aws:logs:us-west-1:123456789012:log-group:/aws/lambda/example-app-dev*:*"
                  ]
                },
                {
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "arn:aws:logs:us-west-1:123456789012:log-group:/aws/lambda/example-app-dev*:*:*"
                  ]
                },
                {
                  "Action": "ses:SendEmail",
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "example-app-dev-lambda"
          }
        ],
        "RoleName": "example-app-dev-us-west-1-lambdaRole",
        "Tags": [
          {
            "Key": "STAGE",
            "Value": "dev"
          }
        ]
      },
      "NativeId": "example-app-dev-us-west-1-lambdaRole"
    },
    {
      "Label": "example-skill-role",
      "Type": "AWS::IAM::Role",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::123456789012:policy/service-role/AWSLambdaBasicExecutionRole-example-lambda-role"
        ],
        "MaxSessionDuration": 3600,
        "Path": "/service-role/",
        "RoleName": "example-skill-role"
      },
      "NativeId": "example-skill-role"
    },
    {
      "Label": "example-task-exec-role",
      "Type": "AWS::IAM::Role",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
        ],
        "MaxSessionDuration": 3600,
        "Path": "/",
        "RoleName": "example-task-exec-role",
        "Tags": [
          {
            "Key": "FormaeResourceLabel",
            "Value": "ecs-task-exec-role"
          },
          {
            "Key": "FormaeStackLabel",
            "Value": "example-app"
          },
          {
            "Key": "Name",
            "Value": "example-task-exec-role"
          }
        ]
      },
      "NativeId": "example-task-exec-role"
    },
    {
      "Label": "example-route53-management-role",
      "Type": "AWS::IAM::Role",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::123456789012:root"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "MaxSessionDuration": 3600,
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "route53:Get*",
                    "route53:List*",
                    "route53:TestDNSAnswer"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*"
                  ]
                },
                {
                  "Action": [
                    "route53domains:Get*",
                    "route53domains:List*"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*"
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "Route53Read"
          }
        ],
        "RoleName": "example-route53-management-role"
      },
      "NativeId": "example-route53-management-role"
    },
    {
      "Label": "example-app-development-modules-role",
      "Type": "AWS::IAM::Role",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:TagSession",
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "pods.eks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::123456789012:policy/example-modules.example-ecr-create-repository"
        ],
        "MaxSessionDuration": 3600,
        "Path": "/",
        "RoleName": "example-app-development-modules-role",
        "Tags": [
          {
            "Key": "app",
            "Value": "example-app"
          },
          {
            "Key": "env",
            "Value": "development"
          },
          {
            "Key": "resource",
            "Value": "modules.example-app"
          },
          {
            "Key": "managed_by",
            "Value": "terraform"
          }
        ]
      },
      "NativeId": "example-app-development-modules-role"
    },
    {
      "Label": "example-lambda-ses-forwarder-role",
      "Type": "AWS::IAM::Role",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Sid": ""
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ses.amazonaws.com"
              },
              "Sid": ""
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Sid": ""
            }
          ],
          "Version": "2012-10-17"
        },
        "MaxSessionDuration": 3600,
        "Path": "/",
        "RoleName": "example-lambda-ses-forwarder-role"
      },
      "ReadOnlyProperties": {
        "Arn": "arn:aws:iam::123456789012:role/example-lambda-ses-forwarder-role",
        "RoleId": "AROAEXAMPLE3456789012"
      },
      "NativeId": "example-lambda-ses-forwarder-role"
    },
    {
      "Label": "OrganizationAccountAccessRole",
      "Type": "AWS::IAM::Role",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::987654321098:root"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "MaxSessionDuration": 3600,
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "*",
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "AdministratorAccess"
          }
        ],
        "RoleName": "OrganizationAccountAccessRole"
      },
      "NativeId": "OrganizationAccountAccessRole"
    },
    {
      "Label": "example-certificate-lambda-role",
      "Type": "AWS::IAM::Role",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "MaxSessionDuration": 3600,
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "acm:RequestCertificate",
                    "acm:DescribeCertificate",
                    "acm:DeleteCertificate",
                    "acm:AddTagsToCertificate"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "route53:GetChange",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "route53:changeResourceRecordSets",
                  "Effect": "Allow",
                  "Resource": "arn:aws:route53:::hostedzone/Z12345678901234567890"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "exampleCertificateRequestorFunctionServiceRoleDefaultPolicy"
          }
        ],
        "RoleName": "example-certificate-lambda-role"
      },
      "NativeId": "example-certificate-lambda-role"
    },
    {
      "Label": "stacksets-exec-example12345678901234567890",
      "Type": "AWS::IAM::Role",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Id": "stacksets-exec-example12345678901234567890-assume-role-policy",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::987654321098:role/aws-service-role/stacksets.cloudformation.amazonaws.com/AWSServiceRoleForCloudFormationStackSetsOrgAdmin"
              },
              "Sid": "1"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "Role created by AWSCloudFormation StackSets",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AdministratorAccess"
        ],
        "MaxSessionDuration": 3600,
        "Path": "/",
        "RoleName": "stacksets-exec-example12345678901234567890"
      },
      "NativeId": "stacksets-exec-example12345678901234567890"
    },
    {
      "Label": "amplify-example-app-dev-192005-authRole",
      "Type": "AWS::IAM::Role",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Effect": "Deny",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Sid": ""
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "MaxSessionDuration": 3600,
        "Path": "/",
        "RoleName": "amplify-example-app-dev-192005-authRole",
        "Tags": [
          {
            "Key": "user:Application",
            "Value": "example-app"
          },
          {
            "Key": "user:Stack",
            "Value": "dev"
          }
        ]
      },
      "NativeId": "amplify-example-app-dev-192005-authRole"
    },
    {
      "Label": "amplify-example-app-dev-192005-unauthRole",
      "Type": "AWS::IAM::Role",
      "Stack": "$unmanaged",
      "Target": "us-west-1",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Effect": "Deny",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Sid": ""
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "MaxSessionDuration": 3600,
        "Path": "/",
        "RoleName": "amplify-example-app-dev-192005-unauthRole",
        "Tags": [
          {
            "Key": "user:Application",
            "Value": "example-app"
          },
          {
            "Key": "user:Stack",
            "Value": "dev"
          }
        ]
      },
      "NativeId": "amplify-example-app-dev-192005-unauthRole"
    }
  ]
}