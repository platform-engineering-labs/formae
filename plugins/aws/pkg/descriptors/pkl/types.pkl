/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module types

open class Resources {
    hidden GoName: String? = "resources"
    resources: List<ResourceType>
}

open class ResourceType {
    hidden GoName: String? = "resource"
    Type: String
    Schema: Schema
    Discoverable: Boolean = false
    ParentResourceTypesWithMappingProperties: Mapping<String, List<ListProperty>>?

    function convert() = """
        new types.ResourceType {
        Type = "\(Type)"
        Schema = "\(Schema.toString())"
        Discoverable = \(Discoverable)
        ParentResourceTypesWithMappingProperties = \(ParentResourceTypesWithMappingProperties?.toString() ?? "null")
        }
        """.replaceFirst("\"new Schema", "new types.Schema").replaceLast("}\"", "}").replaceAll("new ListProperty", "new types.ListProperty")

}

//copy from plugins/pkl/schema/formae.pkl
open class FieldHint {
    hidden GoName: String? = "fieldhint"
    CreateOnly: Boolean = false
    Persist: Boolean = false
    WriteOnly: Boolean = false
    Required: Boolean = false
    RequiredOnCreate: Boolean = false
}

//copy from plugins/pkl/schema/formae.pkl
open class Schema {
    hidden GoName: String? = "schema"
    /// Property that dictates whether a resource is supported by the CC API
    Nonprovisionable: Boolean = false
    /// Property to store as the NativeId following create
    Identifier: String
    /// Property that contains tags
    Tags: String?
    /// Properties that if changed result in a replace
    Hints: Mapping<String, FieldHint>
    // All the fields that can be set by user on the resource which are the Properties keys
    Fields: Listing<String>
}

open class ListProperty {
    // Name of the property in the parent resource
    ParentProperty: String
    // Name of the parameter the LIST API accepts to query nested resources
    ListParameter: String
}
