/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.lambda.permission

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::Lambda::Permission"

typealias FunctionUrlAuthType = "AWS_IAM"|"NONE"

@aws.ResourceHint {
    type = module.type
    identifier = "Id"
    parent = "AWS::Lambda::Function"
    listParam = new formae.ListProperty { parentProperty = "FunctionName" listParameter = "FunctionName" }
    discoverable = false
}
open class Permission extends formae.Resource {

    @aws.FieldHint{createOnly = true}
    action: String(matches(Regex(#"^(lambda:[*]|lambda:[a-zA-Z]+|[*])$"#)))

    @aws.FieldHint{createOnly = true}
    eventSourceToken: (String(matches(Regex(#"^[a-zA-Z0-9._\-]+$"#))))?

    @aws.FieldHint{createOnly = true}
    functionName: String(matches(Regex(#"^(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}((-gov)|(-iso([a-z]?)))?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?$"#)))|formae.Resolvable

    @aws.FieldHint{createOnly = true}
    functionUrlAuthType: FunctionUrlAuthType?

    @aws.FieldHint{createOnly = true}
    principal: String(matches(Regex(#"^.*$"#)))

    @aws.FieldHint{createOnly = true}
    principalOrgID: (String(matches(Regex(#"^o-[a-z0-9]{10,32}$"#))))?

    @aws.FieldHint{createOnly = true}
    sourceAccount: (String(matches(Regex(#"^\d{12}$"#))))?

    @aws.FieldHint{createOnly = true}
    sourceArn: (String(matches(Regex(#"^arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-])+:([a-z]{2}((-gov)|(-iso([a-z]?)))?-[a-z]+-\d{1})?:(\d{12})?:(.*)$"#)))|formae.Resolvable)?
}