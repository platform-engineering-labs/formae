/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.lambda.url

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::Lambda::Url"

typealias AllowMethodsArray = "GET"|"PUT"|"HEAD"|"POST"|"PATCH"|"DELETE"|"*"

typealias AuthType = "AWS_IAM"|"NONE"

typealias InvokeMode = "BUFFERED"|"RESPONSE_STREAM"

@aws.SubResourceHint
open class Cors extends formae.SubResource {
    allowCredentials: Boolean?
    allowHeaders:  Listing<String?>?
    allowMethods: Listing<AllowMethodsArray?>?
    allowOrigins: Listing<String?>?
    exposeHeaders: Listing<String?>?
    maxAge: Int?
}

@aws.ResourceHint {
    type = module.type
    identifier = "FunctionUrl"
    parent = "AWS::Lambda::Function"
    listParam = new formae.ListProperty { parentProperty = "Arn" listParameter = "TargetFunctionArn" }
}
open class Url extends formae.Resource {

    @aws.FieldHint{createOnly = true}
    authType: AuthType

    @aws.FieldHint
    cors: Cors?

    @aws.FieldHint
    invokeMode: InvokeMode?

    @aws.FieldHint{createOnly = true}
    qualifier: (String(matches(Regex(#"((?!^[0-9]+$)([a-zA-Z0-9-_]+))"#))))?

    @aws.FieldHint{createOnly = true}
    targetFunctionArn: String(matches(Regex(#"^(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:((?!\d+)[0-9a-zA-Z-_]+))?$"#)))|formae.Resolvable
}