/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.route53.recordset

import "../aws.pkl"
import "@formae/formae.pkl"

const type = "AWS::Route53::RecordSet"

@aws.SubResourceHint
open class AliasTarget extends formae.SubResource {
    @aws.FieldHint {
        outputField = "DNSName"
    }
    dnsName: String|formae.Resolvable

    evaluateTargetHealth: Boolean?

    hostedZoneId: String|formae.Resolvable
}

@aws.SubResourceHint
open class CidrRoutingConfig extends formae.SubResource {
    collectionid: String
    locationname: String
}

@aws.SubResourceHint
open class Coordinates extends formae.SubResource {
    latitude: String
    longitude: String
}

@aws.SubResourceHint
open class GeoLocation extends formae.SubResource {
    continentcode: String?
    countrycode: String?
    subdivisioncode: String?
}

@aws.SubResourceHint
open class GeoProximityLocation extends formae.SubResource {
    @aws.FieldHint {
        outputField = "AWSRegion"
    }
    awsregion: aws.Region?
    bias: Int?
    coordinates: Coordinates?
    localzoneGroup: String?
}

@aws.ResourceHint {
    type = module.type
    identifier = "Id"
    nonprovisionable = true
    parent = "AWS::Route53::HostedZone"
    listParam = new formae.ListProperty { parentProperty = "Id" listParameter = "HostedZoneId" }
    discoverable = true
}
open class RecordSet extends formae.Resource {
    @aws.FieldHint{
        persist = true
    }
    aliasTarget: (AliasTarget)?

    @aws.FieldHint
    cidrRoutingConfig: (CidrRoutingConfig)?

    @aws.FieldHint
    comment: String?

    @aws.FieldHint
    failover: String?

    @aws.FieldHint
    geoLocation: (GeoLocation)?

    @aws.FieldHint
    geoProximityLocation: (GeoProximityLocation)?

    @aws.FieldHint
    healthCheckId: String?

    @aws.FieldHint {
        createOnly = true
        persist = true
    }
    hostedZoneId: (String|formae.Resolvable)?

    @aws.FieldHint {
        createOnly = true
    }
    hostedZoneName: String?

    @aws.FieldHint
    multiValueAnswer: Boolean?

    @aws.FieldHint{
        createOnly = true
        persist = true
    }
    name: String

    region: aws.Region?

    @aws.FieldHint {
        persist = true
    }
    resourceRecords: (Listing<String>)?

    @aws.FieldHint
    setIdentifier: String?

    @aws.FieldHint{
        persist = true
        outputField = "TTL"
    }
    ttl: Number?

    @aws.FieldHint{
        persist = true
    }
    type: String

    @aws.FieldHint
    weight: Int?
}
