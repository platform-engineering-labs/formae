/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.route53.hostedzone

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::Route53::HostedZone"

@aws.SubResourceHint
open class HostedZoneConfig {
    comment: String?
}

@aws.SubResourceHint
open class QueryLoggingConfig {
    cloudWatchLogsLogGroupArn: String
}

@aws.SubResourceHint
open class VPC {
    @aws.FieldHint {
        outputField = "VPCId"
    }
    vpcId: String

    @aws.FieldHint {
        outputField = "VPCRegion"
    }
    vpcRegion: aws.Region
}

open class HostedZoneResolvable extends formae.Resolvable {
    hidden type = module.type

    hidden id: HostedZoneResolvable = (this) {
        property = "Id"
    }
}

@aws.ResourceHint {
    type = module.type
    identifier = "Id"
    tags = "HostedZoneTags"
}
open class HostedZone extends formae.Resource {

    @aws.FieldHint
    hostedZoneConfig: HostedZoneConfig?

    @aws.FieldHint{
        createOnly = true
        outputTransformation = (it) ->
            if (it is formae.Value)
                if (it.value.endsWith(".")) it else (it) {value = it.value+"."}
            else
                if (it.endsWith(".")) it else (it + ".")

    }
    name: (String|formae.Value)?

    @aws.FieldHint
    queryLoggingConfig: QueryLoggingConfig?

    @aws.FieldHint{
        outputField = "HostedZoneTags"
        outputTransformation = formae.transform.capitalizeMemberKeys
    }
    tags: Listing<formae.Tag>?

    @aws.FieldHint {
        outputField = "VPCs"
    }
    vpcs: Listing<VPC>?

    local parent = this

    hidden res: HostedZoneResolvable = new {
        label = parent.label
        stack = parent.stack?.label
    }
}
