/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.apigateway.apikey

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::ApiGateway::ApiKey"

@aws.SubResourceHint
open class StageKey extends formae.SubResource {
    restApiId: String?
    stageName: String?
}

open class ApiKeyResolvable extends formae.Resolvable {
    hidden type = module.type

    hidden id: ApiKeyResolvable = (this) {
        property = "APIKeyId"
    }

    hidden apiKeyId: ApiKeyResolvable = (this) {
        property = "APIKeyId"
    }
}

@aws.ResourceHint {
    type = module.type
    identifier = "APIKeyId"
    tags = "Tags"
}
open class ApiKey extends formae.Resource {

    @aws.FieldHint
    customerId: String?

    @aws.FieldHint
    description: String?

    @aws.FieldHint
    enabled: Boolean?

    @aws.FieldHint{
        createOnly = true
        writeOnly = true
    }
    generateDistinctId: Boolean?

    @aws.FieldHint{createOnly = true}
    name: String?

    @aws.FieldHint
    stageKeys: Listing<StageKey>?

    @aws.FieldHint
    tags: Listing<formae.Tag>?

    @aws.FieldHint{createOnly = true}
    value: String?

    local parent = this

    hidden res: ApiKeyResolvable = new {
        label = parent.label
        stack = parent.stack?.label
    }
}
