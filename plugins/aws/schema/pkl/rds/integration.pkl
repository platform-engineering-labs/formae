/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.rds.integration

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::RDS::Integration"

open class IntegrationResolvable extends formae.Resolvable {
    hidden type = module.type

    hidden createTime: IntegrationResolvable = (this) {
        property = "CreateTime"
    }
    hidden integrationArnoint: IntegrationResolvable = (this) {
        property = "IntegrationArn"
    }
}


@aws.ResourceHint {
    type = module.type
    identifier = "IntegrationArn"
}
open class Integration extends formae.Resource {

    @aws.FieldHint{createOnly = true}
    additionalEncryptionContext: Mapping<String, Any>?

    @aws.FieldHint
    dataFilter: (String(matches(Regex(#"[a-zA-Z0-9_ "\\\-$,*.:?+\/]*"#))))?

    @aws.FieldHint
    description: String?

    @aws.FieldHint
    integrationName: String?

    @aws.FieldHint{
        createOnly = true
        outputField = "KMSKeyId"
    }
    kmsKeyId: String?

    @aws.FieldHint{createOnly = true}
    sourceArn: String|formae.Resolvable

    @aws.FieldHint
    tags: Listing<formae.Tag>?

    @aws.FieldHint{createOnly = true}
    targetArn: String|formae.Resolvable

    hidden parent = this

    hidden res: IntegrationResolvable = new {
        label = parent.label
        stack = parent.stack?.label
    }
}
