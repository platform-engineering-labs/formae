/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.rds.dbinstance

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::RDS::DBInstance"

@aws.SubResourceHint
open class CertificateDetails extends formae.SubResource {

    @aws.FieldHint{outputField = "CAIdentifier"}
    caIdentifier: String?

    validTill: String?
}

@aws.SubResourceHint
open class Role extends formae.SubResource {
    featureName: String
    roleArn: String
}

@aws.SubResourceHint
open class Endpoint extends formae.SubResource {
    address: String?
    hostedZoneId: String?
    port: String?
}

@aws.SubResourceHint
open class MasterUserSecret extends formae.SubResource {
    kmsKeyId: String?
    secretArn: String?
}

typealias ProcessorFeatureName = "coreCount"|"threadsPerCore"

@aws.SubResourceHint
open class ProcessorFeature extends formae.SubResource {
    name: ProcessorFeatureName?
    value: String?
}

open class DBInstanceResolvable extends formae.Resolvable {
    hidden type = module.type

    hidden certificateDetailsCAIdentifier: DBInstanceResolvable = (this) {
        property = "CertificateDetails.CAIdentifier"
    }

    hidden certificateDetailsValidTill: DBInstanceResolvable = (this) {
        property = "CertificateDetails.ValidTill"
    }

    hidden dbInstanceArn: DBInstanceResolvable = (this) {
        property = "DBInstanceArn"
    }

    hidden dbiResourceId: DBInstanceResolvable = (this) {
        property = "DbiResourceId"
    }

    hidden dbSystemId: DBInstanceResolvable = (this) {
        property = "DBSystemId"
    }

    hidden endpointAddress: DBInstanceResolvable = (this) {
        property = "Endpoint.Address"
    }

    hidden endpointHostedZoneId: DBInstanceResolvable = (this) {
        property = "Endpoint.HostedZoneId"
    }
    hidden endpointPort: DBInstanceResolvable = (this) {
        property = "Endpoint.Port"
    }
    hidden masterUserSecretSecretArn: DBInstanceResolvable = (this) {
        property = "MasterUserSecret.SecretArn"
    }
}

@aws.ResourceHint {
    type = module.type
    identifier = "DBInstanceIdentifier"
    tags = "Tags"
}
open class DBInstance extends formae.Resource {

    @aws.FieldHint
    allocatedStorage: Int?

    @aws.FieldHint{writeOnly = true}
    allowMajorVersionUpgrade: Boolean?

    @aws.FieldHint
    associatedRoles: Listing<Role>?

    @aws.FieldHint
    autoMinorVersionUpgrade: Boolean?

    @aws.FieldHint{writeOnly = true}
    automaticBackupReplicationKmsKeyId: String?

    @aws.FieldHint
    automaticBackupReplicationRegion: aws.Region?

    @aws.FieldHint
    availabilityZone: aws.AvailabilityZone?

    @aws.FieldHint
    backupRetentionPeriod: Int?

    @aws.FieldHint{
        outputField = "CACertificateIdentifier"
    }
    caCertificateIdentifier: String?

    @aws.FieldHint
    certificateDetails: CertificateDetails?

    @aws.FieldHint{writeOnly = true}
    certificateRotationRestart: Boolean?

    @aws.FieldHint{createOnly = true}
    characterSetName: String?

    @aws.FieldHint
    copyTagsToSnapshot: Boolean?

    @aws.FieldHint{createOnly = true}
    customIAMInstanceProfile: String?

    @aws.FieldHint{
        createOnly = true
        outputField = "DBClusterIdentifier"
        }
    dbClusterIdentifier: String?

    @aws.FieldHint{
        outputField = "DBClusterSnapshotIdentifier"
    }
    dbClusterSnapshotIdentifier: String?

    @aws.FieldHint{
        outputField = "DBInstanceClass"
    }
    dbInstanceClass: String?

    @aws.FieldHint{
        writeOnly = true
        outputField = "DBInstanceIdentifier"
    }
    dbInstanceIdentifier: (String(matches(Regex(#"^$|^[a-zA-Z]{1}(?:-?[a-zA-Z0-9]){0,62}$"#))))?

    @aws.FieldHint{
        createOnly = true
        outputField = "DBName"
    }
    dbName: String?

    @aws.FieldHint{
        outputField = "DBParameterGroupName"
    }
    dbParameterGroupName: String?

    @aws.FieldHint{
        outputField = "dbSecurityGroups"
    }
    dbSecurityGroups: Listing<String|formae.Resolvable>?

    @aws.FieldHint{
        outputField = "DBSnapshotIdentifier"
    }
    dbSnapshotIdentifier: String?

    @aws.FieldHint{
        createOnly = true
        outputField = "DBSubnetGroupName"
    }
    dbSubnetGroupName: (String|formae.Resolvable)?

    @aws.FieldHint{
        createOnly = true
        outputField = "DBSystemId"
        }
    dbSystemId: String?

    @aws.FieldHint
    dedicatedLogVolume: Boolean?

    @aws.FieldHint{writeOnly = true}
    deleteAutomatedBackups: Boolean?

    @aws.FieldHint
    deletionProtection: Boolean?

    @aws.FieldHint
    domain: String?

    @aws.FieldHint
    domainAuthSecretArn: String?

    @aws.FieldHint
    domainDnsIps: Listing<String>?

    @aws.FieldHint
    domainFqdn: String?

    @aws.FieldHint
    domainIAMRoleName: (String|formae.Resolvable)?

    @aws.FieldHint
    domainOu: String?

    @aws.FieldHint
    enableCloudwatchLogsExports: Listing<String>?

    @aws.FieldHint
    enableIAMDatabaseAuthentication: Boolean?

    @aws.FieldHint
    enablePerformanceInsights: Boolean?

    @aws.FieldHint
    endpoint: Endpoint?

    @aws.FieldHint
    engine: String?

    @aws.FieldHint
    engineLifecycleSupport: String?

    @aws.FieldHint
    engineVersion: String?

    @aws.FieldHint
    iops: Int?

    @aws.FieldHint{createOnly = true}
    kmsKeyId: (String|formae.Resolvable)?

    @aws.FieldHint
    licenseModel: String?

    @aws.FieldHint
    manageMasterUserPassword: Boolean?

    @aws.FieldHint{writeOnly = true}
    masterUserPassword: (String|formae.Resolvable|formae.Value)?

    @aws.FieldHint
    masterUserSecret: MasterUserSecret?

    @aws.FieldHint{createOnly = true}
    masterUsername: (String(matches(Regex(#"^[a-zA-Z][a-zA-Z0-9_]{0,127}$"#))))?

    @aws.FieldHint
    maxAllocatedStorage: Int?

    @aws.FieldHint
    monitoringInterval: Int?

    @aws.FieldHint
    monitoringRoleArn: String?

    @aws.FieldHint
    multiAZ: Boolean?

    @aws.FieldHint{createOnly = true}
    ncharCharacterSetName: String?

    @aws.FieldHint
    networkType: String?

    @aws.FieldHint
    optionGroupName: String?

    @aws.FieldHint{createOnly = true}
    performanceInsightsKMSKeyId: String?

    @aws.FieldHint
    performanceInsightsRetentionPeriod: Int?

    @aws.FieldHint
    port: (String(matches(Regex(#"^\d*$"#))))?

    @aws.FieldHint
    preferredBackupWindow: String?

    @aws.FieldHint
    preferredMaintenanceWindow: String?

    @aws.FieldHint
    processorFeatures: Listing<ProcessorFeature>?

    @aws.FieldHint
    promotionTier: Int?

    @aws.FieldHint
    publiclyAccessible: Boolean?

    @aws.FieldHint
    replicaMode: String?

    @aws.FieldHint{writeOnly = true}
    restoreTime: String?

    @aws.FieldHint
    sourceDBClusterIdentifier: String?

    @aws.FieldHint{writeOnly = true}
    sourceDBInstanceAutomatedBackupsArn: String?

    @aws.FieldHint{writeOnly = true}
    sourceDBInstanceIdentifier: (String|formae.Resolvable)?

    @aws.FieldHint{writeOnly = true}
    sourceDbiResourceId: (String|formae.Resolvable)?

    @aws.FieldHint{
        createOnly = true
        writeOnly = true
    }
    sourceRegion: aws.Region?

    @aws.FieldHint{createOnly = true}
    storageEncrypted: Boolean?

    @aws.FieldHint
    storageThroughput: Int?

    @aws.FieldHint
    storageType: String?

    @aws.FieldHint
    tags: Listing<formae.Tag>?

    @aws.FieldHint
    tdeCredentialArn: String?

    @aws.FieldHint{writeOnly = true}
    tdeCredentialPassword: String?

    @aws.FieldHint{createOnly = true}
    timezone: String?

    @aws.FieldHint{writeOnly = true}
    useDefaultProcessorFeatures: Boolean?

    @aws.FieldHint{writeOnly = true}
    useLatestRestorableTime: Boolean?

    @aws.FieldHint{outputField = "VPCSecurityGroups"}
    vpcSecurityGroups: Listing<String|formae.Resolvable>?

    hidden parent = this

    hidden res: DBInstanceResolvable = new {
        label = parent.label
        stack = parent.stack?.label
    }
}
