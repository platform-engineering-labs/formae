/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.eks.nodegroup

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::EKS::Nodegroup"

@aws.SubResourceHint
open class LaunchTemplate extends formae.SubResource {
    id: String?
    name: String?
    version: String?
}

@aws.SubResourceHint
open class NodeRepairConfig extends formae.SubResource {
    enabled: Boolean?
}

@aws.SubResourceHint
open class RemoteAccess extends formae.SubResource {
    ec2SshKey: String
    sourceSecurityGroups: Listing<String|formae.Resolvable>?
}

@aws.SubResourceHint
open class ScalingConfig extends formae.SubResource {
    desiredSize: Int?
    maxSize: Int?
    minSize: Int?
}

@aws.SubResourceHint
open class Taint extends formae.SubResource {
    effect: String?
    key: String?
    value: String?
}

@aws.SubResourceHint
open class UpdateConfig extends formae.SubResource {
    maxUnavailable: Number?
    maxUnavailablePercentage: Number?
    updateStrategy: String?
}

open class NodegroupResolvable extends formae.Resolvable {
    hidden type = module.type

    hidden arn: NodegroupResolvable = (this) {
        property = "Arn"
    }
}

@aws.ResourceHint {
    type = module.type
    identifier = "Ref"
    tags = "Tags"
    parent = "AWS::EKS::Cluster"
    listParam = new formae.ListProperty { parentProperty = "Name" listParameter = "ClusterName" }
}
open class Nodegroup extends formae.Resource {

    hidden parent = this

    hidden res: NodegroupResolvable = new {
        label = parent.label
        stack = parent.stack?.label
    }

    @aws.FieldHint
    amiType: String?

    @aws.FieldHint
    capacityType: String?

    @aws.FieldHint{createOnly = true}
    clusterName: String|formae.Resolvable

    @aws.FieldHint
    diskSize: Int?

    @aws.FieldHint{writeOnly = true}
    forceUpdateEnabled: Boolean?

    @aws.FieldHint
    instanceTypes: Listing<String>?

    @aws.FieldHint
    labels: Mapping<String, Any>?

    @aws.FieldHint
    launchTemplate: LaunchTemplate?

    @aws.FieldHint
    nodeRepairConfig: NodeRepairConfig?

    @aws.FieldHint
    nodeRole: String|formae.Resolvable

    @aws.FieldHint{createOnly = true}
    nodegroupName: String?

    @aws.FieldHint
    releaseVersion: String?

    @aws.FieldHint
    remoteAccess: RemoteAccess?

    @aws.FieldHint
    scalingConfig: ScalingConfig?

    @aws.FieldHint{createOnly = true}
    subnets: Listing<String|formae.Resolvable>

    @aws.FieldHint
    tags: Listing<formae.Tag>?

    @aws.FieldHint
    taints: Listing<Taint>?

    @aws.FieldHint
    updateConfig: UpdateConfig?

    @aws.FieldHint
    version: String?
}