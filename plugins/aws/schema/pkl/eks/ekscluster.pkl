/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.eks.cluster

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::EKS::Cluster"

typealias AccessConfigAuthenticationMode = "CONFIG_MAP"|"API_AND_CONFIG_MAP"|"API"

@aws.SubResourceHint
open class AccessConfig extends formae.SubResource {
    authenticationMode: AccessConfigAuthenticationMode?

    @aws.FieldHint{writeOnly = true}
    bootstrapClusterCreatorAdminPermissions: Boolean?
}

@aws.SubResourceHint
open class BlockStorage extends formae.SubResource {
    enabled: Boolean?
}

@aws.SubResourceHint
open class ClusterLogging extends formae.SubResource {
    enabledTypes: Listing<LoggingTypeConfig?>?
}

@aws.SubResourceHint
open class ComputeConfig extends formae.SubResource {
    enabled: Boolean?
    nodePools: Listing<String|formae.Resolvable>?
    nodeRoleArn: (String|formae.Resolvable)?
}

@aws.SubResourceHint
open class ControlPlanePlacement extends formae.SubResource {
    groupName: String?
}

@aws.SubResourceHint
open class ElasticLoadBalancing extends formae.SubResource {
    enabled: Boolean?
}

@aws.SubResourceHint
open class EncryptionConfig extends formae.SubResource {
    provider: ClusterProvider?
    resources: Listing<String>?
}

typealias KubernetesNetworkConfigIpFamily = "ipv4"|"ipv6"

@aws.SubResourceHint
open class KubernetesNetworkConfig extends formae.SubResource {
    elasticLoadBalancing: ElasticLoadBalancing?
    ipFamily: KubernetesNetworkConfigIpFamily?
    serviceIpv4Cidr: String?
    serviceIpv6Cidr: String?
}

@aws.SubResourceHint
open class Logging extends formae.SubResource {
    clusterLogging: ClusterLogging?
}

typealias LoggingTypeConfigType = "api"|"audit"|"authenticator"|"controllerManager"|"scheduler"

@aws.SubResourceHint
open class LoggingTypeConfig extends formae.SubResource {
    type: LoggingTypeConfigType?
}

@aws.SubResourceHint
open class OutpostConfig extends formae.SubResource {
    controlPlaneInstanceType: String
    controlPlanePlacement: ControlPlanePlacement?
    outpostArns: Listing<String|formae.Resolvable>
}

@aws.SubResourceHint
open class ClusterProvider extends formae.SubResource {
    keyArn: (String|formae.Resolvable)?
}

@aws.SubResourceHint
open class RemoteNetworkConfig extends formae.SubResource {
    remoteNodeNetworks: Listing<RemoteNodeNetwork?>?
    remotePodNetworks: Listing<RemotePodNetwork?>?
}

@aws.SubResourceHint
open class RemoteNodeNetwork extends formae.SubResource {
    cidrs: Listing<String>
}


@aws.SubResourceHint
open class RemotePodNetwork extends formae.SubResource {
    cidrs: Listing<String>
}


@aws.SubResourceHint
open class ResourcesVpcConfig extends formae.SubResource {
    endpointPrivateAccess: Boolean?
    endpointPublicAccess: Boolean?
    publicAccessCidrs: Listing<String>?
    securityGroupIds: Listing<String|formae.Resolvable>?
    subnetIds: Listing<String|formae.Resolvable>
}

@aws.SubResourceHint
open class StorageConfig extends formae.SubResource {
    blockStorage: BlockStorage?
}

typealias UpgradePolicySupportType = "STANDARD"|"EXTENDED"

@aws.SubResourceHint
open class UpgradePolicy extends formae.SubResource {
    supportType: UpgradePolicySupportType?
}

@aws.SubResourceHint
open class ZonalShiftConfig extends formae.SubResource {
    enabled: Boolean?
}

open class ClusterResolvable extends formae.Resolvable {
    hidden type = module.type

    hidden arn: ClusterResolvable = (this) {
        property = "Arn"
    }
    hidden name: ClusterResolvable = (this) {
        property = "Name"
    }
}
@aws.ResourceHint {
    type = module.type
    identifier = "Ref"
    tags = "Tags"
}
open class Cluster extends formae.Resource {

    @aws.FieldHint{
        createOnly = true
        writeOnly = true
    }
    accessConfig: AccessConfig?

    @aws.FieldHint{createOnly = true}
    bootstrapSelfManagedAddons: Boolean?

    @aws.FieldHint
    computeConfig: ComputeConfig?

    @aws.FieldHint
    encryptionConfig: Listing<EncryptionConfig>?

    @aws.FieldHint{writeOnly = true}
    force: Boolean?

    @aws.FieldHint
    kubernetesNetworkConfig: KubernetesNetworkConfig?

    @aws.FieldHint
    logging: Logging?

    @aws.FieldHint{createOnly = true}
    name: String(matches(Regex(#"^[0-9A-Za-z][A-Za-z0-9\-_]*"#)))?

    @aws.FieldHint
    outpostConfig: OutpostConfig?

    @aws.FieldHint
    remoteNetworkConfig: RemoteNetworkConfig?

    @aws.FieldHint{createOnly = true}
    resourcesVpcConfig: ResourcesVpcConfig

    @aws.FieldHint{createOnly = true}
    roleArn: String|formae.Resolvable

    @aws.FieldHint
    storageConfig: StorageConfig?

    @aws.FieldHint
    tags: Listing<formae.Tag>?

    @aws.FieldHint
    upgradePolicy: UpgradePolicy?

    @aws.FieldHint
    version: String(matches(Regex(#"1\.\d\d"#)))?

    @aws.FieldHint
    zonalShiftConfig: ZonalShiftConfig?

    hidden parent = this

    hidden res: ClusterResolvable = new {
        label = parent.label
        stack = parent.stack?.label
    }
}