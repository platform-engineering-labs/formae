/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.ecs.service

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::ECS::Service"

typealias AwsVpcConfigurationAssignPublicIp = "DISABLED"|"ENABLED"

typealias AvailabilityZoneRebalancing = "ENABLED"|"DISABLED"

typealias ServiceLaunchType = "EC2"|"FARGATE"|"EXTERNAL"

typealias PropagateTags = "SERVICE"|"TASK_DEFINITION"

typealias SchedulingStrategy = "DAEMON"|"REPLICA"

@aws.SubResourceHint
open class AwsVpcConfiguration extends formae.SubResource {
    assignPublicIp: AwsVpcConfigurationAssignPublicIp?
    securityGroups: Listing<String|formae.Resolvable>?
    subnets: Listing<String|formae.Resolvable>?
}

@aws.SubResourceHint
open class CapacityProviderStrategy extends formae.SubResource {
    base: Int?
    capacityProvider: String?
    weight: Int?
}

@aws.SubResourceHint
open class Alarms extends formae.SubResource {
    alarmNames: Listing<String>
    enable: Boolean
    rollback: Boolean
}

@aws.SubResourceHint
open class DeploymentCircuitBreaker extends formae.SubResource {
    enable: Boolean
    rollback: Boolean
}

@aws.SubResourceHint
open class DeploymentConfiguration extends formae.SubResource {
    alarms: Alarms?
    deploymentCircuitBreaker: DeploymentCircuitBreaker?
    maximumPercent: Int?
    minimumHealthyPercent: Int?
}

typealias DeploymentControllerType = "CODE_DEPLOY"|"ECS"|"EXTERNAL"

@aws.SubResourceHint
open class DeploymentController extends formae.SubResource {
    type: DeploymentControllerType?
}

typealias EBSTagSpecificationPropagateTags = "SERVICE"|"TASK_DEFINITION"

@aws.SubResourceHint
open class TagSpecification extends formae.SubResource {
    propagateTags: EBSTagSpecificationPropagateTags?
    resourceType: String
    tags: Listing<formae.Tag>?
}

@aws.SubResourceHint
open class LoadBalancer extends formae.SubResource {
    containerName: String?
    containerPort: Int?
    loadBalancerName: String?
    targetGroupArn: (String|formae.Resolvable)?
}

@aws.SubResourceHint
open class LogConfiguration extends formae.SubResource {
    logDriver: String?
    options: Mapping<String, Any>?
    secretOptions: Listing<ServiceSecret>?
}

@aws.SubResourceHint
open class NetworkConfiguration extends formae.SubResource {
    awsvpcConfiguration: AwsVpcConfiguration?
}

typealias PlacementConstraintType = "distinctInstance"|"memberOf"

@aws.SubResourceHint
open class PlacementConstraint extends formae.SubResource {
    expression: String?
    type: PlacementConstraintType
}

typealias PlacementStrategyType = "binpack"|"random"|"spread"

@aws.SubResourceHint
open class PlacementStrategy extends formae.SubResource {
    field: String?
    type: PlacementStrategyType
}

@aws.SubResourceHint
open class ServiceSecret extends formae.SubResource {
    name: String
    valueFrom: String
}

@aws.SubResourceHint
open class ClientAlias extends formae.SubResource {
    dnsName: String?
    port: Int
}

@aws.SubResourceHint
open class ServiceConnectConfiguration extends formae.SubResource {
    enabled: Boolean
    logConfiguration: LogConfiguration?
    namespace: String?
    services: Listing<ServiceConnectService>?
}

@aws.SubResourceHint
open class ServiceConnectService extends formae.SubResource {
    clientAliases: Listing<ClientAlias>?
    discoveryName: String?
    ingressPortOverride: Int?
    portName: String
    timeout: TimeoutConfiguration?
    tls: TLSConfiguration?
}

@aws.SubResourceHint
open class ServiceConnectTlsCertificateAuthority extends formae.SubResource {
    awsPcaAuthorityArn: String?
}

@aws.SubResourceHint
open class TLSConfiguration extends formae.SubResource {
    issuerCertificateAuthority: ServiceConnectTlsCertificateAuthority
    kmsKey: String?
    roleArn: (String|formae.Resolvable)?
}
@aws.SubResourceHint
open class ManagedEBSVolumeConfiguration extends formae.SubResource {
    encrypted: Boolean?
    filesystemType: String?
    iops: Int?
    kmsKeyId: (String|formae.Resolvable)?
    roleArn: String
    sizeInGiB: Int?
    snapshotId: (String|formae.Resolvable)?
    tagSpecifications: Listing<TagSpecification>?
    throughput: Int?
    volumeInitializationRate: Int?
    volumeType: String?
}

@aws.SubResourceHint
open class ServiceRegistry extends formae.SubResource {
    containerName: String?
    containerPort: Int?
    port: Int?
    registryArn: String?
}

@aws.SubResourceHint
open class VolumeConfiguration extends formae.SubResource {
    managedEBSVolume: ManagedEBSVolumeConfiguration?
    name: String
}

@aws.SubResourceHint
open class TimeoutConfiguration extends formae.SubResource {
    idleTimeoutSeconds: Int?
    perRequestTimeoutSeconds: Int?
}

@aws.SubResourceHint
open class VpcLatticeConfiguration extends formae.SubResource {
    portName: String
    roleArn: String
    targetGroupArn: String|formae.Resolvable
}

@aws.ResourceHint {
    type = module.type
    identifier = "Ref"
    tags = "Tags"
}
open class Service extends formae.Resource {

    @aws.FieldHint
    availabilityZoneRebalancing: AvailabilityZoneRebalancing?

    @aws.FieldHint
    capacityProviderStrategy: Listing<CapacityProviderStrategy>?

    @aws.FieldHint{createOnly = true}
    cluster: (String|formae.Resolvable)?

    @aws.FieldHint
    deploymentConfiguration: DeploymentConfiguration?

    @aws.FieldHint{createOnly = true}
    deploymentController: DeploymentController?

    @aws.FieldHint
    desiredCount: Int?

    @aws.FieldHint
    enableECSManagedTags: Boolean?

    @aws.FieldHint
    enableExecuteCommand: Boolean?

    @aws.FieldHint
    healthCheckGracePeriodSeconds: Int?

    @aws.FieldHint{createOnly = true}
    launchType: ServiceLaunchType?

    @aws.FieldHint
    loadBalancers: Listing<LoadBalancer>?

    @aws.FieldHint
    networkConfiguration: NetworkConfiguration?
    @aws.FieldHint
    placementConstraints: Listing<PlacementConstraint>?

    @aws.FieldHint
    placementStrategies: Listing<PlacementStrategy>?

    @aws.FieldHint
    platformVersion: String?

    @aws.FieldHint
    propagateTags: PropagateTags?

    @aws.FieldHint{createOnly = true}
    role: String?

    @aws.FieldHint{createOnly = true}
    schedulingStrategy: SchedulingStrategy?

    @aws.FieldHint{writeOnly = true}
    serviceConnectConfiguration: ServiceConnectConfiguration?

    @aws.FieldHint{createOnly = true}
    serviceName: String?

    @aws.FieldHint
    serviceRegistries: Listing<ServiceRegistry>?

    @aws.FieldHint
    tags: Listing<formae.Tag>?

    @aws.FieldHint
    taskDefinition: (String|formae.Resolvable)?

    @aws.FieldHint{writeOnly = true}
    volumeConfigurations: Listing<VolumeConfiguration>?

    @aws.FieldHint
    vpcLatticeConfigurations: Listing<VpcLatticeConfiguration>?
}