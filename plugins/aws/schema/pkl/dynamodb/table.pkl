/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.dynamodb.table

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::DynamoDB::Table"

@aws.SubResourceHint
open class AttributeDefinition extends formae.SubResource {
    attributeName: String
    attributeType: String
}

@aws.SubResourceHint
open class ContributorInsightsSpecification extends formae.SubResource {
    enabled: Boolean
}

@aws.SubResourceHint
open class TableCsv extends formae.SubResource {
    delimiter: String?
    headerList: Listing<String>?
}

@aws.SubResourceHint
open class GlobalSecondaryIndex extends formae.SubResource {
    contributorInsightsSpecification: ContributorInsightsSpecification?
    indexName: String
    keySchema: Listing<KeySchema>
    onDemandThroughput: OnDemandThroughput?
    projection: Projection
    provisionedThroughput: ProvisionedThroughput?
    warmThroughput: WarmThroughput?
}

@aws.SubResourceHint
open class ImportSourceSpecification extends formae.SubResource {
    inputCompressionType: String?
    inputFormat: String
    inputFormatOptions: TableInputFormatOptions?
    s3BucketSource: TableS3BucketSource
}

@aws.SubResourceHint
open class TableInputFormatOptions extends formae.SubResource {
    csv: TableCsv?
}

@aws.SubResourceHint
open class KeySchema extends formae.SubResource {
    attributeName: String
    keyType: String
}

typealias KinesisStreamSpecificationApproximateCreationDateTimePrecision = "MICROSECOND"|"MILLISECOND"

@aws.SubResourceHint
open class KinesisStreamSpecification extends formae.SubResource {
    approximateCreationDateTimePrecision: KinesisStreamSpecificationApproximateCreationDateTimePrecision?
    streamArn: String
}

@aws.SubResourceHint
open class LocalSecondaryIndex extends formae.SubResource {
    indexName: String
    keySchema: Listing<KeySchema>
    projection: Projection
}

@aws.SubResourceHint
open class OnDemandThroughput extends formae.SubResource {
    maxReadRequestUnits: Int?
    maxWriteRequestUnits: Int?
}

@aws.SubResourceHint
open class PointInTimeRecoverySpecification extends formae.SubResource {
    pointInTimeRecoveryEnabled: Boolean?
    recoveryPeriodInDays: Int?
}

@aws.SubResourceHint
open class Projection extends formae.SubResource {
    nonKeyAttributes: Listing<String>?
    projectionType: String?
}

@aws.SubResourceHint
open class ProvisionedThroughput extends formae.SubResource {
    readCapacityUnits: Int
    writeCapacityUnits: Int
}

@aws.SubResourceHint
open class ResourcePolicy extends formae.SubResource {
    policyDocument: Dynamic
}

@aws.SubResourceHint
open class TableS3BucketSource extends formae.SubResource {
    s3Bucket: String
    s3BucketOwner: String?
    s3KeyPrefix: String?
}

@aws.SubResourceHint
open class SSESpecification extends formae.SubResource {
    @aws.FieldHint{outputField = "KMSMasterKeyId"}
    kmsMasterKeyId: String?
    @aws.FieldHint{outputField = "SSEEnabled"}
    sseEnabled: Boolean
    @aws.FieldHint{outputField = "SSEType"}
    sseType: String?
}

@aws.SubResourceHint
open class StreamSpecification extends formae.SubResource {
    resourcePolicy: ResourcePolicy?
    streamViewType: String
}

@aws.SubResourceHint
open class TimeToLiveSpecification extends formae.SubResource {
    attributeName: String?
    enabled: Boolean
}

@aws.SubResourceHint
open class WarmThroughput extends formae.SubResource {
    readUnitsPerSecond: Int?
    writeUnitsPerSecond: Int?
}

@aws.ResourceHint {
    type = module.type
    identifier = "TableName"
    tags = "Tags"
}
open class Table extends formae.Resource {

    @aws.FieldHint
    attributeDefinitions: Listing<AttributeDefinition>?

    @aws.FieldHint
    billingMode: String?

    @aws.FieldHint
    contributorInsightsSpecification: ContributorInsightsSpecification?

    @aws.FieldHint
    deletionProtectionEnabled: Boolean?

    @aws.FieldHint
    globalSecondaryIndexes: Listing<GlobalSecondaryIndex>?

    @aws.FieldHint{
        createOnly = true
        writeOnly = true
    }
    importSourceSpecification: ImportSourceSpecification?

    @aws.FieldHint
    keySchema: Listing<KeySchema>

    @aws.FieldHint
    kinesisStreamSpecification: KinesisStreamSpecification?

    @aws.FieldHint
    localSecondaryIndexes: Listing<LocalSecondaryIndex>?

    @aws.FieldHint
    onDemandThroughput: OnDemandThroughput?

    @aws.FieldHint
    pointInTimeRecoverySpecification: PointInTimeRecoverySpecification?

    @aws.FieldHint
    provisionedThroughput: ProvisionedThroughput?

    @aws.FieldHint
    resourcePolicy: ResourcePolicy?

    @aws.FieldHint {outputField = "SSESpecification"}
    sseSpecification: SSESpecification?

    @aws.FieldHint
    streamSpecification: StreamSpecification?

    @aws.FieldHint
    tableClass: String?

    @aws.FieldHint{createOnly = true}
    tableName: String?

    @aws.FieldHint
    tags: Listing<formae.Tag>?

    @aws.FieldHint
    timeToLiveSpecification: TimeToLiveSpecification?

    @aws.FieldHint
    warmThroughput: WarmThroughput?

}
