/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.s3.storagelens

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::S3::StorageLens"

@aws.SubResourceHint
open class AccountLevel extends formae.SubResource {
    activityMetrics: ActivityMetrics?
    advancedCostOptimizationMetrics: AdvancedCostOptimizationMetrics?
    advancedDataProtectionMetrics: AdvancedDataProtectionMetrics?
    bucketLevel: BucketLevel
    detailedStatusCodesMetrics: DetailedStatusCodesMetrics?
    storageLensGroupLevel: StorageLensGroupLevel?
}

@aws.SubResourceHint
open class ActivityMetrics extends formae.SubResource {
    isEnabled: Boolean?
}

@aws.SubResourceHint
open class AdvancedCostOptimizationMetrics extends formae.SubResource {
    isEnabled: Boolean?
}

@aws.SubResourceHint
open class AdvancedDataProtectionMetrics extends formae.SubResource {
    isEnabled: Boolean?
}

@aws.SubResourceHint
open class AwsOrg extends formae.SubResource {
    arn: String
}

@aws.SubResourceHint
open class BucketLevel extends formae.SubResource {
    activityMetrics: ActivityMetrics?
    advancedCostOptimizationMetrics: AdvancedCostOptimizationMetrics?
    advancedDataProtectionMetrics: AdvancedDataProtectionMetrics?
    detailedStatusCodesMetrics: DetailedStatusCodesMetrics?
    prefixLevel: PrefixLevel?
}

@aws.SubResourceHint
open class StorageLensBucketsAndRegions extends formae.SubResource {
    buckets: Listing<String>?
    regions: Listing<aws.Region>?
}

@aws.SubResourceHint
open class CloudWatchMetrics extends formae.SubResource {
    isEnabled: Boolean
}

@aws.SubResourceHint
open class DataExport extends formae.SubResource {
    cloudWatchMetrics: CloudWatchMetrics?
    s3BucketDestination: S3BucketDestination?
}

@aws.SubResourceHint
open class DetailedStatusCodesMetrics extends formae.SubResource {
    isEnabled: Boolean?
}

@aws.SubResourceHint
open class PrefixLevel extends formae.SubResource {
    storageMetrics: StorageMetrics
}

@aws.SubResourceHint
open class StorageMetrics extends formae.SubResource {
    isEnabled: Boolean?
    selectionCriteria: SelectionCriteria?
}

typealias S3BucketDestinationFormat = "CSV"|"Parquet"

typealias S3BucketDestinationOutputSchemaVersion = "V_1"

@aws.SubResourceHint
open class S3BucketDestination extends formae.SubResource {
    accountId: String
    arn: String
    encryption: Dynamic?
    format: S3BucketDestinationFormat
    outputSchemaVersion: S3BucketDestinationOutputSchemaVersion
    prefix: String?
}

@aws.SubResourceHint
open class StorageLensSSEKMS extends formae.SubResource {
    keyId: String
}

@aws.SubResourceHint
open class SelectionCriteria extends formae.SubResource {
    delimiter: String?
    maxDepth: Int?
    minStorageBytesPercentage: Number?
}

@aws.SubResourceHint
open class StorageLensConfiguration extends formae.SubResource {
    accountLevel: AccountLevel
    awsOrg: AwsOrg?
    dataExport: DataExport?
    exclude: StorageLensBucketsAndRegions?
    id: String
    include: StorageLensBucketsAndRegions?
    isEnabled: Boolean
    storageLensArn: String?
}


@aws.SubResourceHint
open class StorageLensGroupLevel extends formae.SubResource {
    storageLensGroupSelectionCriteria: StorageLensStorageLensGroupSelectionCriteria?
}

@aws.SubResourceHint
open class StorageLensStorageLensGroupSelectionCriteria extends formae.SubResource {
    exclude: Listing<String>?
    include: Listing<String>?
}

@aws.ResourceHint {
    type = module.type
    identifier = "StorageLensConfiguration.Id"
    tags = "Tags"
}
open class StorageLens extends formae.Resource {

    @aws.FieldHint
    storageLensConfiguration: StorageLensConfiguration

    @aws.FieldHint
    tags: Listing<formae.Tag>?

}
