/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.elasticbeanstalk.environment

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::ElasticBeanstalk::Environment"

@aws.SubResourceHint
open class OptionSetting extends formae.SubResource {
    namespace: String
    optionName: String
    resourceName: String?
    value: String?
}

@aws.SubResourceHint
open class Tier extends formae.SubResource {
    name: String?
    type: String?
    version: String?
}

@aws.ResourceHint {
    type = module.type
    identifier = "EnvironmentName"
    tags = "Tags"
}
open class Environment extends formae.Resource {

    @aws.FieldHint{createOnly = true}
    applicationName: String|formae.Resolvable

    @aws.FieldHint{
        createOnly = true
        outputField = "CNAMEPrefix"
        }
    cnamePrefix: String?

    @aws.FieldHint
    description: String?

    @aws.FieldHint{createOnly = true}
    environmentName: String?

    @aws.FieldHint
    operationsRole: String?

    @aws.FieldHint{writeOnly = true}
    optionSettings: Listing<OptionSetting>?

    @aws.FieldHint
    platformArn: (String|formae.Resolvable)?

    @aws.FieldHint{createOnly = true}
    solutionStackName: String?

    @aws.FieldHint
    tags: Listing<formae.Tag>?

    @aws.FieldHint{writeOnly = true}
    templateName: String?

    @aws.FieldHint
    tier: Tier?

    @aws.FieldHint
    versionLabel: String?
}
