/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws

import "@formae/formae.pkl"

typealias Region = "af-south-1" |
  "ap-east-1" |
  "ap-east-2" |
  "ap-northeast-1" |
  "ap-northeast-2" |
  "ap-northeast-3" |
  "ap-south-1" |
  "ap-south-2" |
  "ap-southeast-1" |
  "ap-southeast-2" |
  "ap-southeast-3" |
  "ap-southeast-4" |
  "ap-southeast-5" |
  "ap-southeast-7" |
  "ca-central-1" |
  "ca-west-1" |
  "eu-central-1" |
  "eu-central-2" |
  "eu-north-1" |
  "eu-south-1" |
  "eu-south-2" |
  "eu-west-1" |
  "eu-west-2" |
  "eu-west-3" |
  "il-central-1" |
  "me-central-1" |
  "me-south-1" |
  "mx-central-1" |
  "sa-east-1" |
  "us-east-1" |
  "us-east-2" |
  "us-west-1" |
  "us-west-2"

typealias AvailabilityZone = String((str) -> (
  str.matches(Regex(#"ap\-east\-1[a-c]"#)) ||
  str.matches(Regex(#"ap\-east\-2[a-c]"#)) ||
  str.matches(Regex(#"ap\-northeast\-1[a|c|d]"#)) ||
  str.matches(Regex(#"ap\-northeast\-2[a-d]"#)) ||
  str.matches(Regex(#"ap\-northeast\-3[a-c]"#)) ||
  str.matches(Regex(#"ap\-south\-1[a-c]"#)) ||
  str.matches(Regex(#"ap\-south\-2[a-c]"#)) ||
  str.matches(Regex(#"ap\-southeast\-1[a-c]"#)) ||
  str.matches(Regex(#"ap\-southeast\-2[a-c]"#)) ||
  str.matches(Regex(#"ap\-southeast\-3[a-c]"#)) ||
  str.matches(Regex(#"ap\-southeast\-4[a-c]"#)) ||
  str.matches(Regex(#"ap\-southeast\-5[a-c]"#)) ||
  str.matches(Regex(#"ap\-southeast\-7[a-c]"#)) ||
  str.matches(Regex(#"ca\-central\-1[a|b|d]"#)) ||
  str.matches(Regex(#"ca\-west\-1[a-c]"#)) ||
  str.matches(Regex(#"eu\-central\-1[a-c]"#)) ||
  str.matches(Regex(#"eu\-central\-2[a-c]"#)) ||
  str.matches(Regex(#"eu\-north\-1[a-c]"#)) ||
  str.matches(Regex(#"eu\-south\-1[a-c]"#)) ||
  str.matches(Regex(#"eu\-south\-2[a-c]"#)) ||
  str.matches(Regex(#"eu\-west\-1[a-c]"#)) ||
  str.matches(Regex(#"eu\-west\-2[a-c]"#)) ||
  str.matches(Regex(#"eu\-west\-3[a-c]"#)) ||
  str.matches(Regex(#"il\-central\-1[a-c]"#)) ||
  str.matches(Regex(#"me\-central\-1[a-c]"#)) ||
  str.matches(Regex(#"me\-south\-1[a-c]"#)) ||
  str.matches(Regex(#"mx\-central\-1[a-c]"#)) ||
  str.matches(Regex(#"sa\-east\-1[a-c]"#)) ||
  str.matches(Regex(#"us\-east\-1[a-f]"#)) ||
  str.matches(Regex(#"us\-east\-2[a-c]"#)) ||
  str.matches(Regex(#"us\-west\-1[a-c]"#)) ||
  str.matches(Regex(#"us\-west\-2[a-d]"#))
))

open class Config {
  hidden fixed type: String = "AWS"
  hidden profile: String?
  hidden region: Region

  fixed Type: String = type
  fixed Profile: String? = profile
  fixed Region: Region = region
}

class FieldHint extends formae.FieldHint {}

class ResourceHint extends formae.ResourceHint {
  hidden outputKeyTransformation: (String) -> String = (it) -> it.capitalize()
}

class SubResourceHint extends formae.SubResourceHint {
  hidden outputKeyTransformation: (String) -> String = (it) -> it.capitalize()
}
