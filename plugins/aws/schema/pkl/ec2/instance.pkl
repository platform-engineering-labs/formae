/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.ec2.instance

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::EC2::Instance"

typealias InstanceAffinity = "default"|"host"

@aws.SubResourceHint
open class AssociationParameter extends formae.SubResource {
    key: String
    value: Listing<String>
}

@aws.SubResourceHint
open class BlockDeviceMapping extends formae.SubResource {
    deviceName: String
    ebs: EBS?

    @aws.FieldHint{writeOnly = true}
    noDevice: Dynamic?

    @aws.FieldHint{writeOnly = true}
    virtualName: String?
}

@aws.SubResourceHint
open class EBS extends formae.SubResource {
    deleteOnTermination: Boolean?
    encrypted: Boolean?
    iops: Int?
    kmsKeyId: (String|formae.Resolvable)?
    snapshotId: String?
    volumeSize: Int?
    volumeType: String?
}

@aws.SubResourceHint
open class ElasticGpuSpecification extends formae.SubResource {
    type: String
}

@aws.SubResourceHint
open class ElasticInferenceAccelerator extends formae.SubResource {
    count: Int?
    type: String
}

@aws.SubResourceHint
open class Ipv6Address extends formae.SubResource {
    ipv6Address: String
}

@aws.SubResourceHint
open class InstanceLaunchTemplateSpecification extends formae.SubResource {
    launchTemplateId: String?
    launchTemplateName: String?
    version: String?
}

@aws.SubResourceHint
open class LicenseSpecification extends formae.SubResource {
    licenseConfigurationArn: String
}

@aws.SubResourceHint
open class NetworkInterface extends formae.SubResource {
    associateCarrierIpAddress: Boolean?
    associatePublicIpAddress: Boolean?
    deleteOnTermination: Boolean?
    description: String?
    deviceIndex: String
    groupSet: Listing<String>?
    ipv6AddressCount: Int?
    ipv6Addresses: Listing<Ipv6Address>?
    networkInterfaceId: String?
    privateIpAddress: String?
    privateIpAddresses: Listing<PrivateIpAddress>?
    secondaryPrivateIpAddressCount: Int?
    subnetId: (String|formae.Resolvable)?
}

typealias PrivateDnsNameOptionsHostnameType = "ip-name"|"resource-name"

@aws.SubResourceHint
open class InstancePrivateDnsNameOptions extends formae.SubResource {
    enableResourceNameDnsAAAARecord: Boolean?
    enableResourceNameDnsARecord: Boolean?
    hostnameType: PrivateDnsNameOptionsHostnameType?
}

@aws.SubResourceHint
open class PrivateIpAddress extends formae.SubResource {
    primary: Boolean
    privateIpAddress: String
}

@aws.SubResourceHint
open class SSMAssociation extends formae.SubResource {
    associationParameters: Listing<AssociationParameter>?
    documentName: String
}


@aws.SubResourceHint
open class InstanceState extends formae.SubResource {
    code: String?
    name: String?
}


@aws.SubResourceHint
open class Volume extends formae.SubResource {
    device: String
    volumeId: String|formae.Resolvable
}

open class InstanceResolvable extends formae.Resolvable {
    type = module.type

    hidden instanceId: InstanceResolvable = (this) {
        property = "InstanceId"
    }

    hidden privateDnsName: InstanceResolvable = (this) {
        property = "PrivateDnsName"
    }

    hidden privateIp: InstanceResolvable = (this) {
        property = "PrivateIp"
    }

    hidden publicDnsName: InstanceResolvable = (this) {
        property = "PublicDnsName"
    }

    hidden publicIp: InstanceResolvable = (this) {
        property = "PublicIp"
    }

    hidden vpcIp: InstanceResolvable = (this) {
        property = "VpcIp"
    }
}


@aws.ResourceHint {
    type = module.type
    identifier = "InstanceId"
    tags = "Tags"
}
open class Instance extends formae.Resource {

    @aws.FieldHint{writeOnly = true}
    additionalInfo: String?

    @aws.FieldHint
    affinity: InstanceAffinity?

    @aws.FieldHint{createOnly = true}
    availabilityZone: aws.AvailabilityZone?

    @aws.FieldHint
    blockDeviceMappings: Listing<BlockDeviceMapping>?

    @aws.FieldHint{createOnly = true}
    cpuOptions: Dynamic?

    @aws.FieldHint
    creditSpecification: Dynamic?

    @aws.FieldHint
    disableApiTermination: Boolean?

    @aws.FieldHint
    ebsOptimized: Boolean?

    @aws.FieldHint{createOnly = true}
    elasticGpuSpecifications: Listing<ElasticGpuSpecification>?

    @aws.FieldHint{createOnly = true}
    elasticInferenceAccelerators: Listing<ElasticInferenceAccelerator>?

    @aws.FieldHint{createOnly = true}
    enclaveOptions: Dynamic?

    @aws.FieldHint{createOnly = true}
    hibernationOptions: Dynamic?

    @aws.FieldHint
    hostId: String?

    @aws.FieldHint{createOnly = true}
    hostResourceGroupArn: (String|formae.Resolvable)?

    @aws.FieldHint
    iamInstanceProfile: String?

    @aws.FieldHint{createOnly = true}
    imageId: String?

    @aws.FieldHint
    instanceInitiatedShutdownBehavior: String?

    @aws.FieldHint
    instanceType: String?

    @aws.FieldHint{
        createOnly = true
        writeOnly = true
    }
    ipv6AddressCount: Int?

    @aws.FieldHint{
        createOnly = true
        writeOnly = true
    }
    ipv6Addresses: Listing<Ipv6Address>?

    @aws.FieldHint
    kernelId: String?

    @aws.FieldHint{createOnly = true}
    keyName: (String|formae.Resolvable)?

    @aws.FieldHint{
        createOnly = true
        writeOnly = true
    }
    launchTemplate: Dynamic?

    @aws.FieldHint{createOnly = true}
    licenseSpecifications: Listing<LicenseSpecification>?

    @aws.FieldHint
    monitoring: Boolean?

    @aws.FieldHint{createOnly = true}
    networkInterfaces: Listing<NetworkInterface>?

    @aws.FieldHint{createOnly = true}
    placementGroupName: String?

    @aws.FieldHint
    privateDnsNameOptions: Dynamic?

    @aws.FieldHint{createOnly = true}
    privateIpAddress: String?

    @aws.FieldHint{writeOnly = true}
    propagateTagsToVolumeOnCreation: Boolean?

    @aws.FieldHint
    ramdiskId: String?

    @aws.FieldHint
    securityGroupIds: Listing<String|formae.Resolvable>?

    @aws.FieldHint{createOnly = true}
    securityGroups: Listing<String>?

    @aws.FieldHint
    sourceDestCheck: Boolean?

    @aws.FieldHint
    ssmAssociations: Listing<SSMAssociation>?

    @aws.FieldHint{createOnly = true}
    subnetId: (String|formae.Resolvable)?

    @aws.FieldHint
    tags: Listing<formae.Tag>?

    @aws.FieldHint{createOnly = true}
    tenancy: String?

    @aws.FieldHint
    userData: String?

    @aws.FieldHint
    volumes: Listing<Volume>?

    local parent = this

    hidden res: InstanceResolvable = new {
        label = parent.label
        stack = parent.stack?.label
    }
}