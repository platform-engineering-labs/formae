/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.ec2.ec2fleet

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::EC2::EC2Fleet"

typealias ExcessCapacityTerminationPolicy = "termination"|"no-termination"

typealias EC2FleetType = "maintain"|"request"|"instant"

@aws.SubResourceHint
open class AcceleratorCount extends formae.SubResource {
    max: Int?
    min: Int?
}

@aws.SubResourceHint
open class AcceleratorTotalMemoryMiB extends formae.SubResource {
    max: Int?
    min: Int?
}

@aws.SubResourceHint
open class BaselineEbsBandwidthMbps extends formae.SubResource {
    max: Int?
    min: Int?
}

@aws.SubResourceHint
open class BaselinePerformanceFactors extends formae.SubResource {
    cpu: CpuPerformanceFactor?
}

@aws.SubResourceHint
open class BlockDeviceMapping extends formae.SubResource {
    deviceName: String?
    ebs: EBS?
    noDevice: String?
    virtualName: String?
}

typealias ReplacementStrategy = "launch"|"launch-before-terminate"

@aws.SubResourceHint
open class CapacityRebalance extends formae.SubResource {
    replacementStrategy: ReplacementStrategy?
    terminationDelay: Int?
}

typealias CapacityReservationOptionsRequestUsageStrategy = "use-capacity-reservations-first"

@aws.SubResourceHint
open class CapacityReservationOptions extends formae.SubResource {
    usageStrategy: CapacityReservationOptionsRequestUsageStrategy?
}

@aws.SubResourceHint
open class CpuPerformanceFactor extends formae.SubResource {
    references: Listing<PerformanceFactorReference>?
}

typealias EbsBlockDeviceVolumeType = "gp2"|"gp3"|"io1"|"io2"|"sc1"|"st1"|"standard"

@aws.SubResourceHint
open class EBS extends formae.SubResource {
    deleteOnTermination: Boolean?
    encrypted: Boolean?
    iops: Int?
    kmsKeyId: String?
    snapshotId: String?
    volumeSize: Int?
    volumeType: EbsBlockDeviceVolumeType?
}

@aws.SubResourceHint
open class LaunchTemplateConfig extends formae.SubResource {
    launchTemplateSpecification: LaunchTemplateSpecification?
    overrides: Listing<Overrides>?
}

@aws.SubResourceHint
open class Overrides extends formae.SubResource {
    availabilityZone: aws.AvailabilityZone?
    instanceRequirements: InstanceRequirements?
    instanceType: String?
    maxPrice: String?
    placement: Placement?
    priority: Number?
    subnetId: (String|formae.Resolvable)?
    weightedCapacity: Number?
}

@aws.SubResourceHint
open class LaunchTemplateSpecification extends formae.SubResource {
    launchTemplateId: String?
    launchTemplateName: (String(matches(Regex(#"[a-zA-Z0-9\(\)\.\-/_]+"#))))?
    version: String
}

typealias AcceleratorManufacturers = "amazon-web-services"|"amd"|"habana"|"nvidia"|"xilinx"

typealias AcceleratorNames = "a10g"|"a100"|"h100"|"inferentia"|"k520"|"k80"|"m60"|"radeon-pro-v520"|"t4"|"t4g"|"vu9p"|"v100"

typealias AcceleratorTypes = "gpu"|"fpga"|"inference"

typealias BareMetal = "included"|"required"|"excluded"

typealias BurstablePerformance = "included"|"required"|"excluded"

typealias CpuManufacturers = "intel"|"amd"|"amazon-web-services"|"apple"

typealias InstanceGenerations = "current"|"previous"

typealias LocalStorage = "included"|"required"|"excluded"

typealias LocalStorageTypes = "hdd"|"ssd"

@aws.SubResourceHint
open class InstanceRequirements extends formae.SubResource {
    acceleratorCount: AcceleratorCount?
    acceleratorManufacturers: Listing<AcceleratorManufacturers>?
    acceleratorNames: Listing<AcceleratorNames>?
    acceleratorTotalMemoryMiB: AcceleratorTotalMemoryMiB?
    acceleratorTypes: Listing<AcceleratorTypes>?
    allowedInstanceTypes: Listing<String>?
    bareMetal: BareMetal?
    baselineEbsBandwidthMbps: BaselineEbsBandwidthMbps?
    baselinePerformanceFactors: BaselinePerformanceFactors?
    burstablePerformance: BurstablePerformance?
    cpuManufacturers: Listing<CpuManufacturers>?
    excludedInstanceTypes: Listing<String>?
    instanceGenerations: Listing<InstanceGenerations>?
    localStorage: LocalStorage?
    localStorageTypes: Listing<LocalStorageTypes>?
    maxSpotPriceAsPercentageOfOptimalOnDemandPrice: Int?
    memoryGiBPerVCpu: MemoryGiBPerVCpu?
    memoryMiB: MemoryMiB?
    networkBandwidthGbps: NetworkBandwidthGbps?
    networkInterfaceCount: NetworkInterfaceCount?
    onDemandMaxPricePercentageOverLowestPrice: Int?
    requireHibernateSupport: Boolean?
    spotMaxPricePercentageOverLowestPrice: Int?
    totalLocalStorageGB: TotalLocalStorageGB?
    vCpuCount: VCpuCount?
}

@aws.SubResourceHint
open class MaintenanceStrategies extends formae.SubResource {
    capacityRebalance: CapacityRebalance?
}

@aws.SubResourceHint
open class MemoryGiBPerVCpu extends formae.SubResource {
    max: Number?
    min: Number?
}

@aws.SubResourceHint
open class MemoryMiB extends formae.SubResource {
    max: Int?
    min: Int?
}

@aws.SubResourceHint
open class NetworkBandwidthGbps extends formae.SubResource {
    max: Number?
    min: Number?
}

@aws.SubResourceHint
open class NetworkInterfaceCount extends formae.SubResource {
    max: Int?
    min: Int?
}

@aws.SubResourceHint
open class OnDemandOptionsRequest extends formae.SubResource {
    allocationStrategy: String?
    capacityReservationOptions: CapacityReservationOptions?
    maxTotalPrice: String?
    minTargetCapacity: Int?
    singleAvailabilityZone: Boolean?
    singleInstanceType: Boolean?
}

@aws.SubResourceHint
open class PerformanceFactorReference extends formae.SubResource {
    instanceFamily: String?
}

@aws.SubResourceHint
open class Placement extends formae.SubResource {
    affinity: String?
    availabilityZone: aws.AvailabilityZone?
    groupName: String?
    hostId: String?
    hostResourceGroupArn: String?
    partitionNumber: Int?
    spreadDomain: String?
    tenancy: String?
}

typealias SpotOptionsRequestAllocationStrategy = "lowest-price"|"lowestPrice"|"diversified"|"capacityOptimized"|"capacity-optimized"|"capacityOptimizedPrioritized"|"capacity-optimized-prioritized"|"priceCapacityOptimized"|"price-capacity-optimized"

typealias SpotOptionsRequestInstanceInterruptionBehavior = "hibernate"|"stop"|"terminate"

@aws.SubResourceHint
open class SpotOptionsRequest extends formae.SubResource {
    allocationStrategy: SpotOptionsRequestAllocationStrategy?
    instanceInterruptionBehavior: SpotOptionsRequestInstanceInterruptionBehavior?
    instancePoolsToUseCount: Int?
    maintenanceStrategies: MaintenanceStrategies?
    maxTotalPrice: String?
    minTargetCapacity: Int?
    singleAvailabilityZone: Boolean?
    singleInstanceType: Boolean?
}

typealias TagSpecificationResourceType = "client-vpn-endpoint"|"customer-gateway"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-gpu"|"elastic-ip"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"internet-gateway"|"key-pair"|"launch-template"|"local-gateway-route-table-vpc-association"|"natgateway"|"network-acl"|"network-insights-analysis"|"network-insights-path"|"network-interface"|"placement-group"|"reserved-instances"|"route-table"|"security-group"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-route-table"|"volume"|"vpc"|"vpc-flow-log"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"

@aws.SubResourceHint
open class TagSpecification extends formae.SubResource {
    resourceType: TagSpecificationResourceType?
    tags: Listing<formae.Tag>?
}

typealias DefaultTargetCapacityType = "on-demand"|"spot"

typealias TargetCapacityUnitType = "vcpu"|"memory-mib"|"units"

@aws.SubResourceHint
open class TargetCapacitySpecification extends formae.SubResource {
    defaultTargetCapacityType: DefaultTargetCapacityType?
    onDemandTargetCapacity: Int?
    spotTargetCapacity: Int?
    targetCapacityUnitType: TargetCapacityUnitType?
    totalTargetCapacity: Int
}

@aws.SubResourceHint
open class TotalLocalStorageGB extends formae.SubResource {
    max: Number?
    min: Number?
}

@aws.SubResourceHint
open class VCpuCount extends formae.SubResource {
    max: Int?
    min: Int?
}

@aws.ResourceHint {
    type = module.type
    identifier = "FleetId"
    tags = "TagSpecifications"
}
open class EC2Fleet extends formae.Resource {

    @aws.FieldHint
    context: String?

    @aws.FieldHint
    excessCapacityTerminationPolicy: ExcessCapacityTerminationPolicy?

    @aws.FieldHint{createOnly = true}
    launchTemplateConfigs: Listing<LaunchTemplateConfig>

    @aws.FieldHint{createOnly = true}
    onDemandOptions: OnDemandOptionsRequest?

    @aws.FieldHint{createOnly = true}
    replaceUnhealthyInstances: Boolean?

    @aws.FieldHint{createOnly = true}
    spotOptions: SpotOptionsRequest?

    @aws.FieldHint{createOnly = true}
    tagSpecifications: Listing<TagSpecification>?

    @aws.FieldHint
    targetCapacitySpecification: TargetCapacitySpecification

    @aws.FieldHint{createOnly = true}
    terminateInstancesWithExpiration: Boolean?

    @aws.FieldHint{createOnly = true}
    type: EC2FleetType?

    @aws.FieldHint{createOnly = true}
    validFrom: String?

    @aws.FieldHint{createOnly = true}
    validUntil: String?
}
