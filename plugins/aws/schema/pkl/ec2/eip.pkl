/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.ec2.eip

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::EC2::EIP"

open class EIPResolvable extends formae.Resolvable {
    hidden type = module.type

    hidden id: EIPResolvable = (this) {
        property = "AllocationId"
    }

    hidden allocationId: EIPResolvable = (this) {
        property = "AllocationId"
    }
}

@aws.ResourceHint {
    type = module.type
    identifier = "PublicIp"
    tags = "Tags"
}
open class EIP extends formae.Resource {

    @aws.FieldHint{
        createOnly = true
        writeOnly = true
    }
    address: String?

    @aws.FieldHint{createOnly = true}
    domain: String?

    @aws.FieldHint
    instanceId: String?

    @aws.FieldHint{
        createOnly = true
        writeOnly = true
    }
    ipamPoolId: String?

    @aws.FieldHint{createOnly = true}
    networkBorderGroup: String?

    @aws.FieldHint
    publicIpv4Pool: String?

    @aws.FieldHint
    tags: Listing<formae.Tag>?

    @aws.FieldHint{
        createOnly = true
        writeOnly = true
    }
    transferAddress: String?

    hidden parent = this

    hidden res: EIPResolvable = new {
        label = parent.label
        stack = parent.stack?.label
    }
}
