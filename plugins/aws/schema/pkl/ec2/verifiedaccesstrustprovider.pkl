/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.ec2.verifiedaccesstrustprovider

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::EC2::VerifiedAccessTrustProvider"


@aws.SubResourceHint
open class DeviceOptions extends formae.SubResource {
    publicSigningKeyUrl: String?
    tenantId: String?
}

@aws.SubResourceHint
open class OidcOptions extends formae.SubResource {
    authorizationEndpoint: String?
    clientId: String?

    @aws.FieldHint{writeOnly = true}
    clientSecret: String?

    issuer: String?
    scope: String?
    tokenEndpoint: String?
    userInfoEndpoint: String?
}
@aws.ResourceHint {
    type = module.type
    identifier = "VerifiedAccessTrustProviderId"
    tags = "Tags"
}
open class VerifiedAccessTrustProvider extends formae.Resource {

    @aws.FieldHint
    description: String?

    @aws.FieldHint{createOnly = true}
    deviceOptions: DeviceOptions?

    @aws.FieldHint{createOnly = true}
    deviceTrustProviderType: String?

    @aws.FieldHint
    oidcOptions: OidcOptions?

    @aws.FieldHint{createOnly = true}
    policyReferenceName: String

    @aws.FieldHint
    sseSpecification: Dynamic?

    @aws.FieldHint
    tags: Listing<formae.Tag>?

    @aws.FieldHint{createOnly = true}
    trustProviderType: String

    @aws.FieldHint{createOnly = true}
    userTrustProviderType: String?
}
