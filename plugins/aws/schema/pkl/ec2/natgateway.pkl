/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.ec2.natgateway

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::EC2::NatGateway"

open class NatGatewayResolvable extends formae.Resolvable {
    hidden type = module.type

    hidden id: NatGatewayResolvable = (this) {
        property = "NatGatewayId"
    }
    hidden natGatewayId: NatGatewayResolvable = (this) {
        property = "NatGatewayId"
    }
}

@aws.ResourceHint {
    type = module.type
    identifier = "NatGatewayId"
    tags = "Tags"
}
open class NatGateway extends formae.Resource {

    @aws.FieldHint{createOnly = true}
    allocationId: (String|formae.Resolvable)?

    @aws.FieldHint{createOnly = true}
    connectivityType: String?

    @aws.FieldHint{writeOnly = true}
    maxDrainDurationSeconds: Int?

    @aws.FieldHint{createOnly = true}
    privateIpAddress: String?

    @aws.FieldHint
    secondaryAllocationIds: Listing<String|formae.Resolvable>?

    @aws.FieldHint
    secondaryPrivateIpAddressCount: Int?

    @aws.FieldHint
    secondaryPrivateIpAddresses: Listing<String>?

    @aws.FieldHint{createOnly = true}
    subnetId: String|formae.Resolvable

    @aws.FieldHint
    tags: Listing<formae.Tag>?

    hidden parent = this

    hidden res: NatGatewayResolvable = new {
        label = parent.label
        stack = parent.stack?.label
    }
}
