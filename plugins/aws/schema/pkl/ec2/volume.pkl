/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.ec2.volume

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::EC2::Volume"

open class VolumeResolvable extends formae.Resolvable {
    hidden type = module.type

    hidden volumeId: VolumeResolvable = (this) {
        property = "VolumeId"
    }
}

typealias VolumeType = "standard" | "io1" | "io2" | "gp2" | "sc1" | "st1" | "gp3"

@aws.ResourceHint {
    type = module.type
    identifier = "VolumeId"
    tags = "Tags"
}
open class Volume extends formae.Resource {

    @aws.FieldHint
    autoEnableIO: Boolean?

    @aws.FieldHint
    availabilityZone: aws.AvailabilityZone

    @aws.FieldHint
    encrypted: Boolean?

    @aws.FieldHint
    iops: Int?

    @aws.FieldHint
    kmsKeyId: (String|formae.Resolvable)?

    @aws.FieldHint
    multiAttachEnabled: Boolean?

    @aws.FieldHint
    outpostArn: (String|formae.Resolvable)?

    @aws.FieldHint
    size: Int?

    @aws.FieldHint
    snapshotId: (String|formae.Resolvable)?

    @aws.FieldHint
    tags: Listing<formae.Tag>?

    @aws.FieldHint
    throughput: Int?

    @aws.FieldHint
    volumeType: VolumeType? = "gp2"

    local parent = this

    hidden res: VolumeResolvable = new {
        label = parent.label
        stack = parent.stack?.label
    }
}
