/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

module aws.ec2.vpccidrblock

import "@formae/formae.pkl"
import "../aws.pkl"

const type = "AWS::EC2::VPCCidrBlock"

@aws.ResourceHint {
    type = module.type
    identifier = "Id"
    parent = "AWS::EC2::VPC"
    listParam = new formae.ListProperty { parentProperty = "VpcId" listParameter = "VpcId" }
    discoverable = false
}
open class VPCCidrBlock extends formae.Resource {

    @aws.FieldHint{createOnly = true}
    amazonProvidedIpv6CidrBlock: Boolean?

    @aws.FieldHint{createOnly = true}
    cidrBlock: String?

    @aws.FieldHint{
        createOnly = true
        writeOnly = true
    }
    ipv4IpamPoolId: (String|formae.Resolvable)?

    @aws.FieldHint{
        createOnly = true
        writeOnly = true
    }
    ipv4NetmaskLength: Int?

    @aws.FieldHint{createOnly = true}
    ipv6CidrBlock: String?

    @aws.FieldHint{createOnly = true}
    ipv6CidrBlockNetworkBorderGroup: String?

    @aws.FieldHint{
        createOnly = true
        writeOnly = true
    }
    ipv6IpamPoolId: (String|formae.Resolvable)?

    @aws.FieldHint{
        createOnly = true
        writeOnly = true
    }
    ipv6NetmaskLength: Int?

    @aws.FieldHint{createOnly = true}
    ipv6Pool: String?

    @aws.FieldHint{createOnly = true}
    vpcId: String|formae.Resolvable
}
