/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

amends "@formae/forma.pkl"
import "@formae/formae.pkl"
import "@aws/aws.pkl"
import "@formae/ext/random.pkl"

import "@aws/ec2/vpc.pkl"
import "@aws/ec2/subnet.pkl"
import "@aws/ec2/securitygroup.pkl"
import "@aws/rds/dbsubnetgroup.pkl"
import "@aws/rds/dbinstance.pkl"
import "@aws/secretsmanager/secret.pkl"

description {
    text = """
    This example demonstrates how to create and use an AWS Secrets Manager secret for a database password,
    and reference it securely in an RDS instance definition. All resources are defined inline for clarity.
    For larger projects, consider modularizing resources.

    This includes:
    - Creating a Secrets Manager secret to store the database password.
    - Referencing the secret's value directly in the RDS instance config.
    - Showing how secret resolution works in context, with all resources visible in a single file.
    """
    confirm = true
}

properties {
    name = new formae.Prop {
        flag = "name"
        default = "secret-resolution"
    }
    region = new formae.Prop {
        flag = "region"
        default = "us-west-2"
    }
}

forma {
    local stack = new formae.Stack {
        label = properties.name.value
        description = "Secret resolution example"
    }
    stack

    local target = new formae.Target {
        label = "aws-target"
        config = new aws.Config {
            region = properties.region.value
        }
    }
    target

    // VPC
    local vpc = new vpc.VPC {
        label = "VPC"
        cidrBlock = "10.0.0.0/16"
    }
    vpc

    // Subnets
    local subnet1 = new subnet.Subnet {
        label = "Subnet1"
        vpcId = vpc.res.vpcId
        cidrBlock = "10.0.1.0/24"
        availabilityZone = properties.region.value + "a"
    }
    subnet1
    local subnet2 = new subnet.Subnet {
        label = "Subnet2"
        vpcId = vpc.res.vpcId
        cidrBlock = "10.0.2.0/24"
        availabilityZone = properties.region.value + "b"
    }
    subnet2

    // DB Subnet Group
    local dbSubnetGroup = new dbsubnetgroup.DBSubnetGroup {
        label = "DBSubnetGroup"
        dbSubnetGroupDescription = "Subnet group for RDS"
        dbSubnetGroupName = properties.name.value + "-db-subnet-group"
        subnetIds {
            subnet1.res.subnetId
            subnet2.res.subnetId
        }
    }
    dbSubnetGroup

    // Security Group
    local dbSecurityGroup = new securitygroup.SecurityGroup {
        label = "DBSecurityGroup"
        groupDescription = "DB security group"
        vpcId = vpc.res.vpcId
    }
    dbSecurityGroup

    // Secret
    local dbSecret = new secret.Secret {
        label = "DBSecret"
        name = properties.name.value + "-password"
        description = "Database password secret (randomly generated)"
        secretString = formae.value(random.password(12, false)).opaque.setOnce
    }
    dbSecret

    // Database using the secret
    local database = new dbinstance.DBInstance {
        label = "Database"
        allocatedStorage = 20
        dbInstanceClass = "db.t3.micro"
        engine = "postgres"
        engineVersion = "13"
        masterUsername = "testuser"
        masterUserPassword = dbSecret.res.secretString
        dbSubnetGroupName = dbSubnetGroup.res.dbSubnetGroupName
        vpcSecurityGroups { dbSecurityGroup.res.groupId }
        storageEncrypted = true
        deletionProtection = false
    }
    database
}