/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

amends "@formae/forma.pkl"
import "@formae/formae.pkl"
import "@aws/aws.pkl"

import "./types.pkl"
import "./vpc_resources.pkl"
import "./database_resources.pkl"

description {
    text = """
        This example shows how to abstract services behind a small set of parameters.

        Platform team is maintaining the services, developers only use prescribed properties to spin them up.
        """
    confirm = true
}

properties {
    team = new formae.Prop {
        flag = "team"
    }

    database = new formae.Prop {
        flag = "database"
        type = Boolean
        default = false
    }

    size = new formae.Prop {
        flag = "database-size"
        default = "xs"
    }
}

local _vpc = new vpc_resources.VpcResources {
    team = properties.team.Value
}

local _database = new database_resources.DatabaseResources {
    team = properties.team.Value
    size = properties.size.Value
    vpc = _vpc.vpc
    subnet1 = _vpc.subnet1
    subnet2 = _vpc.subnet2
}

forma {
    new formae.Stack {
        label = "\(properties.team.value)-stack"
        description = "Stack for \(properties.team.value) infrastructure"
    }

    new formae.Target {
        label = "\(properties.team.value)-target"
        config = new aws.Config {
            region = types.regionFromTeam(properties.team.value)
        }
    }

    when (properties.database.Value) {
        ..._vpc.resources
        ..._database.resources
    } else {
        throw ("No services selected")
    }
}
