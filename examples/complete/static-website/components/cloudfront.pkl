/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

import "@aws/cloudfront/distribution.pkl"

import "../vars.pkl"
import "./s3_website.pkl" as s3

local s3WebsiteEndpoint = s3.siteBucket.bucketName + ".s3-website." + vars.region + ".amazonaws.com"

cfdistribution = new distribution.Distribution {
    label = "WebsiteDistribution"

    distributionConfig = new distribution.DistributionConfig {
        origins = new Listing {
            new distribution.Origin {
                id = "S3Origin"
                domainName = s3WebsiteEndpoint

                // For S3 website endpoints, don't use OriginAccessIdentity
                // If you need OAI later, switch to s3.amazonaws.com endpoint with:
                /*
                s3OriginConfig = new aws.cloudfront.distribution.DistributionS3OriginConfig {
                    originAccessIdentity = "origin-access-identity/cloudfront/E127EXAMPLE51Z"
                }
                */
                // For S3 website endpoints, use CustomOriginConfig instead:
                customOriginConfig = new distribution.CustomOriginConfig {
                    originProtocolPolicy = "http-only"
                    httpPort = 80
                }
            }
        }

        defaultCacheBehavior = new distribution.DefaultCacheBehavior {
            targetOriginId = "S3Origin"
            viewerProtocolPolicy = "redirect-to-https"
            allowedMethods = new Listing { "GET" "HEAD" }
            cachedMethods = new Listing { "GET" "HEAD" }
            forwardedValues = new distribution.ForwardedValues {
                queryString = false
                cookies = new distribution.Cookies {
                    forward = "none"
                }
            }
            minTTL = 0
            defaultTTL = 60
            maxTTL = 600
        }

        enabled = true
        defaultRootObject = "index.html"
        httpVersion = "http2"
        priceClass = "PriceClass_All"
        viewerCertificate = new distribution.ViewerCertificate {
            cloudFrontDefaultCertificate = true
        }

        // For production with custom domain, comment out the above ViewerCertificate
        // and uncomment these:
        /*
        viewerCertificate = new distribution.ViewerCertificate {
            acmCertificateArn = "arn:aws:acm:us-east-1:123456789012:certificate/abcdef12-3456-7890-abcd-ef1234567890"
            sslSupportMethod = "sni-only"
        }
        aliases = new Listing { vars.DomainName }
        */
    }
}