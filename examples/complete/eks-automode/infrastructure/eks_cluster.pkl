/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

import "@aws/eks/ekscluster.pkl"
import "@aws/eks/nodegroup.pkl"
import "@aws/ec2/subnet.pkl"

import "./iam.pkl"
import "./network.pkl"
import "./security_groups.pkl"

import "../vars.pkl"


function eksCluster(properties: Dynamic?): ekscluster.Cluster = new ekscluster.Cluster {
    label = vars.clusterLabel
    name = properties.name.value
    version = properties.clusterVersion.value
    roleArn = iam.clusterRole(properties).res.arn

    accessConfig = new ekscluster.AccessConfig {
        authenticationMode = "API_AND_CONFIG_MAP"
    }

    resourcesVpcConfig = new ekscluster.ResourcesVpcConfig {
        subnetIds {
            network.subnets(properties)[0].res.subnetId
            network.subnets(properties)[1].res.subnetId
        }
        securityGroupIds {
            security_groups.securityGroups(properties)[0].res.groupId
            security_groups.securityGroups(properties)[1].res.groupId
        }
        endpointPrivateAccess = false
        endpointPublicAccess = true
    }

    computeConfig = new ekscluster.ComputeConfig {
        enabled = true
        nodeRoleArn = iam.nodeRole(properties).res.arn
        nodePools { "general-purpose" }
    }

    kubernetesNetworkConfig = new ekscluster.KubernetesNetworkConfig {
        ipFamily = "ipv4"
        serviceIpv4Cidr = "10.100.0.0/16"
        elasticLoadBalancing = new ekscluster.ElasticLoadBalancing {
            enabled = true
        }
    }

    storageConfig = new ekscluster.StorageConfig {
        blockStorage = new ekscluster.BlockStorage {
            enabled = true
        }
    }

    tags { new { key = "Name"; value = properties.name.value } }
}