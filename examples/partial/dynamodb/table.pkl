/*
 * Â© 2025 Platform Engineering Labs Inc.
 *
 * SPDX-License-Identifier: FSL-1.1-ALv2
 */

amends "@formae/forma.pkl"
import "@formae/formae.pkl"
import "@aws/aws.pkl"
import "@aws/dynamodb/table.pkl"

description {
    text = """
    DynamoDB Table Example.

    This example demonstrates how to create a DynamoDB table with:
    - Primary key (partition key + optional sort key)
    - Global Secondary Index (GSI) for alternate query patterns
    - DynamoDB Streams enabled for change data capture
    """
    confirm = true
}

properties {
    name = new formae.Prop {
        flag = "name"
        default = "dynamodb-example"
    }

    region = new formae.Prop {
        flag = "region"
        default = "us-west-2"
    }
}

forma {
    local stack = new formae.Stack {
        label = properties.name.value
        description = "DynamoDB table example"
    }
    stack

    local target = new formae.Target {
        label = "default-aws-target"
        config = new aws.Config {
            region = properties.region.value
        }
    }
    target

    new table.Table {
        label = "UsersTable"
        tableName = "users"

        billingMode = "PAY_PER_REQUEST"

        attributeDefinitions {
            new table.TableAttributeDefinition {
                attributeName = "userId"
                attributeType = "S"  // String
            }
            new table.TableAttributeDefinition {
                attributeName = "email"
                attributeType = "S"  // String
            }
            new table.TableAttributeDefinition {
                attributeName = "createdAt"
                attributeType = "N"  // Number
            }
        }

        keySchema {
            new table.TableKeySchema {
                attributeName = "userId"
                keyType = "HASH"
            }
            new table.TableKeySchema {
                attributeName = "createdAt"
                keyType = "RANGE"
            }
        }

        globalSecondaryIndexes {
            new table.TableGlobalSecondaryIndex {
                indexName = "EmailIndex"
                keySchema {
                    new table.TableKeySchema {
                        attributeName = "email"
                        keyType = "HASH"
                    }
                }
                projection {
                    projectionType = "ALL"
                }
            }
        }

        streamSpecification {
            streamViewType = "NEW_AND_OLD_IMAGES"
        }

        timeToLiveSpecification {
            attributeName = "expiresAt"
            enabled = true
        }

        pointInTimeRecoverySpecification {
            pointInTimeRecoveryEnabled = true
        }

        // Set to false for easier testing
        deletionProtectionEnabled = false

        tags {
            new { key = "Name"; value = "users" }
        }
    }
}